lireEtValider	id_fonction	lireEtValider
(	symbole	PARENTHESE_OUVRANTE
)	symbole	PARENTHESE_FERMANTE
entier	mot_clef	entier
$x	id_variable	$x
;	symbole	POINT_VIRGULE
{	symbole	ACCOLADE_OUVRANTE
faire	mot_clef	faire
{	symbole	ACCOLADE_OUVRANTE
$x	id_variable	$x
=	symbole	EGAL
lire	mot_clef	lire
(	symbole	PARENTHESE_OUVRANTE
)	symbole	PARENTHESE_FERMANTE
;	symbole	POINT_VIRGULE
si	mot_clef	si
$x	id_variable	$x
<	symbole	INFERIEUR
0	nombre	0
|	symbole	OU
$x	id_variable	$x
=	symbole	EGAL
0	nombre	0
alors	mot_clef	alors
{	symbole	ACCOLADE_OUVRANTE
ecrire	mot_clef	ecrire
(	symbole	PARENTHESE_OUVRANTE
99	nombre	99
)	symbole	PARENTHESE_FERMANTE
;	symbole	POINT_VIRGULE
}	symbole	ACCOLADE_FERMANTE
}	symbole	ACCOLADE_FERMANTE
tantque	mot_clef	tantque
$x	id_variable	$x
<	symbole	INFERIEUR
0	nombre	0
|	symbole	OU
$x	id_variable	$x
=	symbole	EGAL
0	nombre	0
;	symbole	POINT_VIRGULE
retour	mot_clef	retour
$x	id_variable	$x
;	symbole	POINT_VIRGULE
}	symbole	ACCOLADE_FERMANTE
main	id_fonction	main
(	symbole	PARENTHESE_OUVRANTE
)	symbole	PARENTHESE_FERMANTE
entier	mot_clef	entier
$val	id_variable	$val
;	symbole	POINT_VIRGULE
{	symbole	ACCOLADE_OUVRANTE
$val	id_variable	$val
=	symbole	EGAL
lireEtValider	id_fonction	lireEtValider
(	symbole	PARENTHESE_OUVRANTE
)	symbole	PARENTHESE_FERMANTE
;	symbole	POINT_VIRGULE
ecrire	mot_clef	ecrire
(	symbole	PARENTHESE_OUVRANTE
$val	id_variable	$val
)	symbole	PARENTHESE_FERMANTE
;	symbole	POINT_VIRGULE
}	symbole	ACCOLADE_FERMANTE
	symbole	FIN
