en informatique , un algorithme d&apos; apprentissage incrémental ou incrémentieltemplate : lien web. est un algorithme d&apos; apprentissage online , c&apos; est-à-dire qui apprend à partir de données reçues au fur et à mesure du temps . à chaque incrément il reçoit des données d&apos; entrées et un résultat , l&apos; algorithme calcule alors une amélioration du calcul fait pour prédire le résultat à partir des données d&apos; entrées . puisqu&apos; il ne connait pas l&apos; intégralité des données , un algorithme d&apos; apprentissage incrémental est forcé de faire des choix qui peuvent s&apos; avérer finalement non optimaux ; l&apos; étude des algorithmes d&apos; apprentissage incrémental a ainsi mis l&apos; accent sur la qualité des choix possibles dans une telle configuration . l&apos; analyse compétitive formalise cette idée en comparant la performance , sur les mêmes données , de l&apos; algorithme d&apos; apprentissage incrémental et de l&apos; équivalent ayant à disposition l&apos; intégralité des données . pour d&apos; autres points de vue sur les algorithmes où les données deviennent disponibles au fur et à mesure du temps , voir les articles algorithme de fouille de flots de données ( centré sur la quantité de mémoire nécessaire à représenter les données reçues dans le passé ) , dynamic algorithm ( centré sur la complexité en temps pour manipuler les solutions à des problèmes à inputs online ) . un problème illustrant le concept d&apos; algorithme d&apos; apprentissage incrémental est celui du voyageur de commerce canadien . le but de ce problème est de minimiser le coût d&apos; atteinte d&apos; un sommet dans un graphe pondéré où certaines des arêtes sont peu « fiables » car elles peuvent à tout moment être retirées du graphe . cependant , si une arête devient inutilisable , cela n&apos; est révélé au &quot; voyageur &quot; uniquement lorsqu&apos; il atteint l&apos; un des sommets de cette arête . le pire cas de ce problème a lieu lorsque toutes les arêtes peu fiables s&apos; avèrent être inutilisables et le problème se réduit alors au problème du plus court chemin . une analyse alternative du problème peut être effectuée à l&apos; aide de l&apos; analyse compétitive . pour cette méthode d&apos; analyse , l&apos; algorithme offline connait par avance les arêtes qui vont être inutilisables et le but est de minimiser le rapport entre la performance de l&apos; algorithme en ligne et celle de l&apos; algorithme hors ligne . ce problème est pspace-complet . harmonic , random-slack , tight span algorithm , tree algorithm , work function algorithm .
