pour les articles homonymes , voir théorème min-max . l&apos; algorithme minimax est un algorithme qui s&apos; applique à la théorie des jeuxtemplate : chapitre pour les jeux à deux joueurs à somme nulle ( et à information complète ) consistant à minimiser la perte maximum ( c&apos; est-à-dire dans le pire des cas ) . pour une vaste famille de jeux , le théorème du minimax de von neumann assure l&apos; existence d&apos; un tel algorithmemais si les joueurs ne connaissent pas les coups joués par leur adversaire , comme dans le jeu pierre-feuille-ciseaux , cet algorithme ne conduit qu&apos; à des stratégies demandant l&apos; utilisation du hasard ; voir l&apos; article sur le théorème pour plus de détails , même si dans la pratique il n&apos; est souvent guère aisé de le trouver . le jeu de hex est un exemple où l&apos; existence d&apos; un tel algorithme est établie et montre que le premier joueur peut toujours gagner , sans pour autant que cette stratégie soit connue . il amène l&apos; ordinateur à passer en revue toutes les possibilités pour un nombre limité de coups et à leur assigner une valeur qui prend en compte les bénéfices pour le joueur et pour son adversaire . le meilleur choix est alors celui qui minimise les pertes du joueur tout en supposant que l&apos; adversaire cherche au contraire à les maximiser ( le jeu est à somme nulle ) . il existe différents algorithmes basés sur minmax permettant d&apos; optimiser la recherche du meilleur coup en limitant le nombre de nœuds visités dans l&apos; arbre de jeu , le plus connu est l&apos; élagage alpha-bêta . en pratique , l&apos; arbre est souvent trop vaste pour pouvoir être intégralement exploré ( comme pour le jeu d&apos; échecs ou de go ) . seule une fraction de l&apos; arbre est alors explorée . dans le schéma ci-dessus , les nœuds gris représentent les nœuds joueurs et les bleus les nœuds opposants . pour déterminer la valeur du nœud a , on choisit la valeur maximum de l ’ ensemble des nœuds b ( a est un nœud joueur ) . il faut donc déterminer les valeurs des nœuds b qui reçoivent chacun la valeur minimum stockée dans leurs fils ( nœuds b sont opposants ) . les nœuds c sont des feuilles , leur valeur peut donc être calculée par la fonction d ’ évaluation . le nœud a prend donc la valeur 5 . le joueur doit donc jouer le coup l ’ amenant en b2 . en observant l ’ arbre , on comprend bien que l ’ algorithme considère que l ’ opposant va jouer de manière optimale : il prend le minimum . sans ce prédicat , on choisirait le nœud c1 qui propose le plus grand gain et le prochain coup sélectionné amènerait en b1 . mais alors on prend le risque que l ’ opposant joue c3 qui propose seulement un gain de 3 . en pratique , la valeur théorique de la position p ne pourra généralement pas être calculée . en conséquence , la fonction d ’ évaluation sera appliquée sur des positions non terminales . on considérera que plus la fonction d ’ évaluation est appliquée loin de la racine , meilleur est le résultat du calcul . c&apos; est-à-dire qu ’ en examinant plus de coups successifs , nous supposons obtenir une meilleure approximation de la valeur théorique donc un meilleur choix de mouvement . cet algorithme peut être optimisé grâce à l&apos; implémentation de la technique dite de l&apos; élagage alpha-bêta .
