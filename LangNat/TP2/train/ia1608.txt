la thèse de church – du nom du mathématicien alonzo church – est une thèse concernant la définition de la notion de calculabilité . dans une forme dite « physique » template : les métamorphoses du calcul , elle affirme que la notion physique de la calculabilité , définie comme étant tout traitement systématique réalisable par un processus physique ou mécanique , peut être exprimée par un ensemble de règles de calcul , défini de plusieurs façons dont on a pu démontrer mathématiquement qu&apos; elles sont équivalentes . dans sa forme dite « psychologique » , elle affirme que la notion intuitive de calculabilité , qui est liée à ce qu&apos; un être humain considère comme effectivement calculable ou non , peut également être exprimée par ces mêmes ensembles de règles de calcul formelles . stephen kleene fut le premier à nommer « thèse de church » ( en 1943 et 1952 ) ce que ce dernier présentait comme une définition de la calculabilité effective . elle est également connue sous le nom plus récent de thèse de church-turing , terminologie proposée par certains spécialistesvoir robert i. soare , article cité. dans les années 1990 . bien que church soit sans nul doute le premier , au début des années 1930 , à avoir pensé pouvoir définir formellement la calculabilité intuitive ( par la λ-définissabilité ) attesté pas une lettre de church à gödel de 1934 , voir soare , article cité . , ce sont cependant l&apos; article d&apos; alan turing de 1936 et son modèle mécanique de calculabilité qui ont définitivement emporté l&apos; adhésion , selon gödel , kleene et church lui-même . la thèse est formulée en disant que des règles formelles de calcul ( machines de turing , les fonctions λ-définissables , les fonctions récursives … ) formalisent correctement la notion de méthode effective de calcul. l&apos; exécution de l&apos; algorithme ne requiert pas d&apos; intelligence de l&apos; humain sauf celle qui est nécessaire pour comprendre et exécuter les instructions . un exemple d&apos; une telle méthode est l&apos; algorithme d&apos; euclide pour déterminer le plus grand commun diviseur d&apos; entiers naturels ou celui qui détermine pour un entier n la longueur de la suite de goodstein qui commence en n. il s&apos; agit là d&apos; une définition intuitive assez claire , mais pas d&apos; une définition formelle , faute d&apos; avoir précisé ce qu&apos; on entend par « instruction simple et précise » ou par « l&apos; intelligence requise pour exécuter les instructions » . on peut en revanche définir formellement ce qu&apos; est un algorithme et pour cela on a le choix entre divers formalismes . à ce stade , la thèse de church affirme que les deux notions , intuitive de « méthode effective » , et formelle ( « règles de calcul » , ou « algorithme » ) , concordent , apportant ainsi une définition rigoureuse du concept de calculabilité . en effet , au début du xxe siècle , les mathématiciens utilisaient des expressions informelles comme effectivement réalisable . il était donc important de trouver une formalisation rigoureuse de ce concept . depuis les années 1940 , les mathématiciens utilisent grâce à la thèse de church une notion bien définie , celle de fonction calculable . la thèse a d&apos; abord été formulée pour le lambda-calcul , mais d&apos; autres formalismes ont été proposés pour modéliser les fonctions calculables , par exemple les fonctions récursives , les machines de turing , les machines de post et les machines à compteurs . la plus surprenante est probablement celle proposée par yuri matiyasevich en résolvant le dixième problème de hilbert . on peut montrer que toutes ces définitions , bien que fondées sur des idées assez différentes , décrivent exactement le même ensemble de fonctions . ces systèmes , qui ont le même pouvoir d&apos; expression que l&apos; une quelconque de ces définitions équivalentes , sont dits turing-équivalents ou turing-complets . le fait que toutes ces tentatives pour formaliser le concept d&apos; algorithme aient conduit à des résultats équivalents est l&apos; argument qui rend la thèse de church incontournable . les différents modèles de calcul , purement mathématiques , élaborés pour modéliser la calculabilité sont a priori indépendants de la physique , et des processus physiques . aussi , il n&apos; est pas évident a priori que la version « physique » de la thèse de church soit vérifiée avec des modèles abstraits . de plus , le modèle le plus proche d&apos; un mécanisme physique ( les machines de turing ) contient des hypothèses implicites qui sont inspirées par la physique classique ( comme un bit ne peut être que &apos; 0&apos; ou bien &apos; 1&apos; ) . en 1982 , le physicien richard feynman s&apos; est posé la question de savoir si les modèles de calcul pouvaient calculer l&apos; évolution de processus quantiques . il est parvenu à démontrer que cela était possible , mais de manière inefficace , inapplicable en pratique . or , la nature est visiblement capable de « calculer » cette évolution de manière efficace . la question se pose donc inévitablement de savoir si les processus quantiques sont en relation avec une autre forme de calculabilité et s&apos; ils remettent en cause la forme physique de la thèse de church . pour explorer cette question , il est nécessaire d&apos; élaborer un modèle de calcul prenant en compte les particularités de la mécanique quantique , et capable de calculer les processus quantiques efficacement . muni de ce modèle mathématique , on peut alors étudier ses relations avec les modèles classiques de calcul , sur le plan de la calculabilité ( ce que les modèles sont capables de calculer ou non ) , l&apos; universalité ( si une machine peut simuler toutes les autres efficacement ) , et de la complexité ( dans quels ordres de temps et de mémoire les problèmes peuvent-ils être calculés ) . les premières tentatives de créer des modèles de calcul quantiques ont eu lieu au début des années 1980 par paul benioffp . bénioff , « template : langue » , template : langue , volume 22 ( 1980 ) , pp. 563-591 . . c&apos; était un modèle de machine de turing réversible , prenant en compte une des particularité majeure de la mécanique quantique : l&apos; unitarité qui implique que les calculs quantiques doivent être réversibles ( contrairement aux calculs classiques ) . c&apos; est-à-dire que , connaissant un résultat et la série d&apos; opérations y ayant mené , un calcul quantique peut toujours être déroulé en arrière jusqu&apos; à retrouver les données initialesce qui est impossible avec un calcul classique : connaissant un résultat « 10 » par exemple , et l&apos; opération y ayant mené , l&apos; addition , on est incapable de savoir si les données initiales étaient « 5 » et « 5 » ou « 9 » et « 1 » par exemple . . mais il manquait encore des ingrédients pour aboutir à un véritable modèle de calcul quantique : même si les calculs utilisaient la superposition quantique , les états des bits à chaque étape de calcul étaient dans un état classique &apos; 0&apos; ou bien &apos; 1&apos; . en 1985 , david deutsch propose un véritable modèle de calcul quantiqued . deutsch quantum therory , the church-turing principle , and the universal quantum computer proc . r. soc . lond . a , volume 400 ( 1985 ) pp. 97-117 , reconnu comme étant le premier véritable modèle de machine de turing quantiquecolin . p. williams explorations in quantum computing springer . 2d édition 2011 . dans cet article , deutsch remarque que les calculateurs quantiques sont capables de produire un résultat que les machines de turing classiques ne peuvent produire : générer un nombre purement aléatoire . mais cela ne remet pas en cause la thèse de church , car la génération d&apos; un nombre aléatoire ne fait pas partie de ce qui est considéré comme un « calcul » . ce modèle de calcul a permis d&apos; établir que les machines de turing quantiques ne permettent pas de calculer davantage de problèmes que les machines de turing classiques . elles sont même , d&apos; un certain point de vue , moins complètes que les machines de turing classiques car , si on désire utiliser le parallélisme quantique pour calculer plus rapidement certaines propriétés conjointes entre m valeurs binaires , alors il a été démontré en 1991 par richard jozsar . jozsa , « template : langue » , template : langue , volume 435 ( 1991 ) pp. 563-574. que seules 2 ^ { 2 ^ m } - 2 ^ { m + 1 } propriétés parmi les 2 ^ { 2 ^ m } propriétés conjointes possibles étaient calculables de cette manière , alors qu&apos; elles le sont toutes avec une machine de turing classiquemais , évidemment , une machine de turing quantique pouvant simuler une machine de turing classique , une machine de turing quantique est capable de calculer toutes les propriétés conjointes , mais sans utiliser ses propriétés propres . . — &#91; note 22 de kleene &#93; , la même thèse est implicite dans la description des machines de turing &#91; note 23 de kleene &#93; . — &#91; sa note 24 , dans l&apos; indécidable , p. 274 &#93; , il fait référence à l&apos; article de post ( 1936 ) et aux définitions formelles de l&apos; article de church formal definitions in the theory of ordinal numbers , fund . math. vol. 28 ( 1936 ) pp.11-21 ( voir réf . 2 , p. 286 , de l&apos; indécidable ) . — , ce qui est la version de turing de la thèse de church , qu&apos; il ne connaissait pas à l&apos; époque . on peut définir très formellement des fonctions ( par exemple sur les entiers naturels ) qui ne sont pas calculables . elles prennent en général des valeurs tellement grandes que l&apos; on ne peut pas les calculer et par conséquent on ne peut même pas « exprimer » les valeurs qu&apos; elles prennent , car c&apos; est leur définition qui le dit . la plus connue est celle dite du castor affairé . pour simplifier , il s&apos; agit de la taille du plus grand travail que peut faire une machine de turing quand on lui donne une ressource limitée par n. comme sa définition est obtenue comme une limite de ce que pourraient faire les machines de turing , le nombre qu&apos; elle produit ne peut pas être calculé , ni même sa valeur exacte exprimée , tout au plus les chercheurs arrivent-ils à donner des nombres qui lui sont inférieurs pour les plus petites valeurs de n ( 2 , 3 , 4 , 5 , péniblement 6 ) . le nombre oméga de chaitin est un nombre réel parfaitement défini qui n&apos; est pas calculable , précisément parce que sa construction dépend des réponses au problème semi-décidable de l&apos; arrêt des machines de turing . on ne connaît pas de modèle de calcul plus puissant que les machines de turing , c&apos; est-à-dire qui serait en mesure de calculer des fonctions non-calculables par une machine de turing , ou même de calculer plus rapidement les fonctions calculables ( voir théorie de la complexité des algorithmes ) . la thèse de church physique pourrait être remise en cause par l&apos; hypercalcul , mais les processus physiques utilisés par l&apos; hypercalcul sont extrêmement spéculatifs et probablement à jamais impossibles à mettre en œuvre en pratique . inversement , il existe des modèles de calcul plus faibles que les machines de turing . tout système de calcul généraliste ne permet pas d&apos; atteindre la notion de calculabilité de church et turing . par exemple , en affaiblissant un peu la définition des fonctions récursives ( en les limitant à des définitions récursives reposant sur les successeurs d&apos; un seul paramètre , voir fonction récursive primitive pour en savoir plus ) , on obtient un système de calcul qui semble aussi généraliste et qui effectivement permet de définir bon nombre de fonctions usuelles , mais où certaines fonctions ne sont plus calculables alors qu&apos; elles le sont avec des machines de turing ou en lambda-calcul . le système en question n&apos; est donc pas équivalent aux machines de turing . cette fonction croît très rapidement . par exemple a ( 4,2 ) est un nombre de 19 729 chiffres . ( en ) alonzo church , « an unsolvable problem of elementary number theory ( abstract ) » , bull . amer . math . soc . , vol. 41 , ‎ &lt; time &gt; 1935 &lt; / time &gt; , p. 332-333 ( abstract ) , bull . amer . math . soc . 41 ( 1935 ) , p. 332-333 . ( en ) alonzo church , « a note on the entscheidungsproblem » , journal of symbolic logic , vol. 1 , ‎ &lt; time &gt; 1936 &lt; / time &gt; , p. 40-41 , correction p. 101-102 . ( en ) stephen cole kleene , « lambda-definability and recursiveness » , duke mathematical journal , vol. 2 , ‎ &lt; time &gt; 1936 &lt; / time &gt; , p. 340-353 . martin davis editor , the undecidable , basic papers on undecidable propositions , unsolvable problems and computable functions , raven press , new york , 1965 . les articles originaux dont ceux de gödel , church , turing , rosser , kleene , and post . préfaces de davis . stephen cole kleene , 1952 , introduction to metamathematics , van nostrand , new york . stephen cole kleene , origins of recursive function theory in annals of the history of computing , vol . 3 no . 1 , janvier 1981 . robert soare , ( 1995-6 ) , computability and recursion , bulletin of symbolic logic 2 ( 1996 ) , 284--321 , version en ligne , article sur l&apos; historique de la calculabilité , qui milite pour un certain nombre de changements terminologiques , écrit par un spécialiste du domaine . wilfried sieg step by recursive step : church&apos; s analysis of effective calculability . bulletin of symbolic logic 3 ( 2 ) : 154-180 ( 1997 ) . collected works of a. m. turing vol. mathematical logic , eds . r. o. gandy and c. e. m. yates , ( isbn 0-444-50423-0 ) .
