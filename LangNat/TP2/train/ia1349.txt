template : article . en pratique , on a souvent \ mathcal m = \ mathbb { r } ^ d. par construction , les fonctions de hachage doivent permettre aux points proches d&apos; entrer fréquemment en collision ( i.e. h ( p ) = h ( q ) ) et inversement , les points éloignés ne doivent entrer que rarement en collision . pour que la famille lsh soit intéressante , il faut donc p _ 2 &lt; p _ 1 . la famille \ mathcal f est alors appelée ( r , cr , p _ 1 , p _ 2 ) -sensitive . la famille est d&apos; autant plus intéressante si p _ 1 est très supérieure à p _ 2 . une définition alternativetemplate : article est définie par rapport à un univers u possédant une fonction de similarité \ phi : u \ times u \ to &#91; 0,1 &#93; . une famille lsh est alors un ensemble de fonctions de hachage h et une distribution de probabilité d sur les fonctions , telle qu&apos; une fonction h \ in h choisie selon d satisfait la propriété pr _ { h \ in h } &#91; h ( a ) = h ( b ) &#93; = \ phi ( a , b ) pour tout a , b \ in u. lsh a été appliqué dans plusieurs domaines , en particulier pour la recherche d&apos; image par le contenu , la comparaison de sequence d&apos; adnjeremy buhler , efficient large-scale sequence comparison by locality-sensitive hashing , bioinformatics 17 : 419-428 . , la recherche par similarité de documents audios . l&apos; échantillonnage de bit , template : article est une méthode simple permettant de construire une famille lsh . cette approche est adaptée à la distance de hamming dans un espace binaire de dimension d , i.e. quand un point de l&apos; espace appartient à \ { 0,1 \ } ^ d. la famille \ mathcal f de fonctions de hachage est alors l&apos; ensemble des projections sur une des d coordonnées , i.e. , { \ mathcal f } = \ { h : \ { 0,1 \ } ^ d \ to \ { 0,1 \ } \ mid h ( x ) = x _ i , i = 1 ... d \ } , où x _ i est la ie coordonnée de x. une fonction aléatoire h de { \ mathcal f } ne fait donc que sélectionner un bit au hasard dans le vecteur x d&apos; origine . p _ 2 = 1-cr / d. l&apos; application principale de lsh est de fournir un algorithme efficace de recherche des plus proches voisins . l&apos; algorithme donne une méthode de construction d&apos; une famille lsh \ mathcal g utilisable , c&apos; est-à-dire telle que p _ 1 \ gg p _ 2 , et ceci à partir d&apos; une famille lsh \ mathcal f de départ . l&apos; algorithme a deux paramètres principaux : le paramètre de largeur k et le nombre de tables de hachage l. \ mathcal f , i.e. , g ( p ) = &#91; h _ 1 ( p ) , ... , h _ k ( p ) &#93; . en d&apos; autres termes , une fonction de hachage aléatoire g est obtenue par concaténation de k fonctions de hachage choisies aléatoirement dans \ mathcal h. l&apos; algorithme construit ensuite l tables de hachage , correspondant chacune à une fonction de hachage g. la je table de hachage contient alors les points de \ mathcal m hachés par la fonction g _ j. seules les positions non-vides des tables de hachage sont conservées , en utilisant un hachage standard des valeurs de g _ j ( p ) . les tables de hachage résultats n&apos; ont alors que n entrées ( non-vides ) , réduisant l&apos; espace mémoire par table à o ( n ) et donc o ( nl ) pour la structure de donnée totale . pour un point requête q , l&apos; algorithme itère sur les l fonctions de hachage g. pour chaque g considérée , on trouve les points hachés à la même position que le point requête q dans la table correspondante . le processus s&apos; arrête dès qu&apos; un point r est trouvé tel que d ( r , q ) \ le cr. l&apos; algorithme a une probabilité de trouver un point à une distance cr de la requête q ( si un tel point existe ) avec une probabilité \ omega ( \ min \ { 1 , lp _ 1 ^ k \ } ) . ( en ) cet article est partiellement ou en totalité issu de l ’ article de wikipédia en anglais intitulé « locality-sensitive hashing » ( voir la liste des auteurs ) .
