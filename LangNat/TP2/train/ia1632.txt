si vous disposez d&apos; ouvrages ou d&apos; articles de référence ou si vous connaissez des sites web de qualité traitant du thème abordé ici , merci de compléter l&apos; article en donnant les références utiles à sa vérifiabilité et en les liant à la section « notes et références » ( modifier l&apos; article , comment ajouter mes sources ? ) . urbià l&apos; origine pour universal real-time behavior interface ou « interface universelle pour systèmes interactifs » en français est une plate-forme logicielle , sous licence libre bsd , utilisée pour le développement d&apos; applications dans les domaines de la robotique et des systèmes complexes . urbi intègre une architecture distribuée de composants en c + + appelée uobject , ainsi qu&apos; un langage de script parallèle et événementiel appelé urbiscript . uobject facilite l&apos; intégration d&apos; objets c + + ou java dans le langage , et permet leur exécution locale ou distante , tandis qu&apos; urbiscript agit comme un outil d&apos; orchestration pour coordonner les différents composants et leurs interactions . urbi a été initialement développé depuis 1999 par jean-christophe baillie au laboratoire de robotique cognitive de l&apos; ensta paristech à paris . il a ensuite été développé par la société gostai , fondée en 2006 . le langage urbiscript est un langage de script qui peut être décrit comme un langage dorchestration : de même que lua dans le domaine du jeu vidéo , urbi peut intégrer des composants c + + , les parties algorithmiques gourmandes en cpu étant allouées aux composants c + + / java , tandis que la description des modèles comportementaux généraux restent du domaine du langage de script , qui est plus flexible , plus facile à maintenir , et qui permet des interactions dynamiques durant l&apos; exécution du programme . le langage urbiscript apporte de nouvelles abstractions utiles lors du développement , les concepts de programmation parallèle et de programmation événementielle faisant partie intégrante du langage . la spécification de comportements concurrents et la réaction à des événements étant des exigences clefs de la plupart des applications de robotique et d&apos; intelligence artificielle , urbi est de fait particulièrement adapté à ce type d&apos; applications . outre sa flexibilité et sa modularité , le point fort du langage urbiscript est sa simplicité , offrant une interface intuitive aux débutants , mais également des fonctions avancées aux développeurs confirmés. whenever est utilisé pour déclencher un bloc de code de façon répétée tant que la condition associée reste vraie . le signe « &amp; » est utilisé pour spécifier que deux commandes ( ou groupes de commandes ) doivent être lancées exactement au même instant et exécutées en parallèle . dans l&apos; exemple ci-dessus , la virgule à la fin de la commande permet l&apos; exécution en tâche de fond de la commande qui la précède , entrainant la poursuite de l&apos; exécution du programme et en particulier à la commande &apos; at &apos; qui suit de s&apos; exécuter sans attendre la fin de la boucle infinie . l&apos; architecture de composants uobject , actuellement basée sur la bibliothèque c + + uobject , permet d&apos; interfacer n&apos; importe quel objet c + + / java avec urbi / urbiscript , rendant les méthodes et les attributs sélectionnés du code c + + visibles directement depuis le langage de script . des indicateurs peuvent être positionnés pour permettre de prévenir le composant c + + de tout changement effectué sur les attributs de l&apos; objet par le langage urbiscript . un uobject peut être utilisé localement , soit en le liant statiquement lors de la compilation , soit par chargement dynamique ultérieur . l&apos; objet c + + partage alors directement la mémoire du noyau urbi , permettant une intégration efficace . il s&apos; agit d&apos; une utilisation typique pour les composants critiques tels que les drivers de moteurs ou de capteurs . ce même objet c + + peut également être utilisé sans modifications en tant que composant distant . dans ce cas , il devient un programme autonome qui est exécuté avec comme paramètre l&apos; adresse ip du moteur urbi . dans les deux cas , l&apos; objet apparaîtra et sera traité dans urbi comme s&apos; il était un objet natif . les composants développés par la communauté peuvent être trouvés et échangés sur le site web communautaire github urbi . urbi permet d&apos; utiliser gostai studio qui intègre un éditeur de comportements pour créer graphiquement des machines à états finis hiérarchiques . gostai lab est une autre application permettant de réaliser rapidement des interfaces utilisateur par simple glisser-déposer de widgets sur une page de composition .
