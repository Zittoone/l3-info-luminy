les algorithmes génétiques appartiennent à la famille des algorithmes évolutionnistes . leur but est d&apos; obtenir une solution approchée à un problème d&apos; optimisation , lorsqu&apos; il n&apos; existe pas de méthode exacte ( ou que la solution est inconnue ) pour le résoudre en un temps raisonnable . les algorithmes génétiques utilisent la notion de sélection naturelle et l&apos; appliquent à une population de solutions potentielles au problème donné . la solution est approchée par « bonds » successifs , comme dans une procédure de séparation et évaluation , à ceci près que ce sont des formules qui sont recherchées et non plus directement des valeurs . l&apos; utilisation d&apos; algorithmes génétiques , dans la résolution de problèmes , est à l&apos; origine le fruit des recherches de john holland et de ses collègues et élèves de l&apos; université du michigan qui ont , dès 1960 , travaillé sur ce sujet . la nouveauté introduite par ce groupe de chercheurs a été la prise en compte de l&apos; opérateur d&apos; enjambement en complément des mutations . et c&apos; est cet opérateur qui permet le plus souvent de se rapprocher de l&apos; optimum d&apos; une fonction en combinant les gènes contenus dans les différents individus de la population . le premier aboutissement de ces recherches a été la publication en 1975 de adaptation in natural and artificial system . la popularisation des algorithmes génétiques sera l&apos; œuvre de david goldberg à travers son livre genetic algorithms in search , optimization , and machine learninggenetic algorithms in search , optimization , and machine learning , david goldberg , addison-wesley professional , 11 janvier 1989 ) , template : isbn ( 1989 ) . ce livre est encore édité aujourd&apos; hui . en europe , la première conférence sur ce type de sujet fut leuropean conference on artificial life en 1991 ( elle a fêté ses 20 ans en 2011european conference on artifical life 2011 ) , coorganisée par francisco varela et paul bourgine . un des premiers ouvrages à présenter en français les algorithmes génétiques sera le livreintelligence artificielle et informatique théorique , jean-marc alliot , thomas schiex , éditions cepadues , 1993 , template : isbn intelligence artificielle et informatique théorique qui lui consacrera un chapitre dès 1993 . la première conférence francophone avec actesevolution artificielle 94 , 20-23 septembre 1994 , enac , toulouse , jean-marc alliot , evelyne lutton , marc schoenauer , publisher : cépaduès éditions 1995 , template : isbn sur le sujet sera organisée en 1994 par jean-marc alliot ( irit ) , evelyne lutton ( inria ) , marc schoenauer ( inria ) et edmund ronald . les algorithmes génétiques étant basés sur des phénomènes biologiques , il convient de rappeler au préalable quelques termes de génétique . les organismes vivants sont constitués de cellules , dont les noyaux comportent des chromosomes qui sont des chaînes d&apos; adn . l&apos; élément de base de ces chaines est un nucléotide , identifié par sa base azotée ( a , t , c ou g ) . sur chacun de ces chromosomes , une suite de nucléotides constitue une chaîne qui code les fonctionnalités de l&apos; organisme ( la couleur des yeux par exemple ) . ainsi , un gène est une phrase fonctionnelle le long de la chaîne . la position d&apos; un gène sur le chromosome est son locus . l&apos; ensemble des gènes d&apos; un individu est son génotype et l&apos; ensemble du patrimoine génétique d&apos; une espèce est le génome . les différentes versions d&apos; un même gène sont appelées allèles . on utilise aussi , dans les algorithmes génétiques , une analogie avec la théorie de l&apos; évolution qui propose qu&apos; au fil du temps , les gènes conservés au sein d&apos; une population donnée sont ceux qui sont le plus adaptés aux besoins de l&apos; espèce vis-à-vis de son environnement . la génétique a mis en évidence l&apos; existence de processus importants au sein d&apos; un groupe d&apos; organisme d&apos; une même espèce ( ou d&apos; espèces proches chez les bactéries ) donnant lieu au brassage génétique . ces processus interviennent lors de la phase de reproduction lorsque les chromosomes de deux organismes fusionnent en créant un nouvel organisme . ces opérations sont « imitées » par les algorithmes génétiques afin de faire évoluer les populations de solutions de manière progressive . pour déterminer quels individus sont plus enclins à obtenir les meilleurs résultats , une sélection est opérée . ce processus est analogue à un processus de sélection naturelle , les individus les plus adaptés gagnent la compétition de la reproduction tandis que les moins adaptés meurent avant la reproduction , ce qui améliore globalement l&apos; adaptation . étant donné que la sélection est le résultat d&apos; une intervention humaine ou , du moins , l&apos; application d&apos; un critère défini par l&apos; homme , les algorithmes génétiques devraient donc plutôt être rapprochés de la sélection artificielle telle que la pratiquent les agriculteurs que de la sélection naturelle , qui œuvre « en aveugle » . lors de cette opération , deux chromosomes s&apos; échangent des parties de leurs chaînes , pour donner de nouveaux chromosomes . ces enjambements peuvent être simples ou multiples . dans le premier cas , les deux chromosomes se croisent et s&apos; échangent des portions d&apos; adn en un seul point . dans le deuxième cas , il y a plusieurs points de croisement . pour les algorithmes génétiques , c&apos; est cette opération ( le plus souvent sous sa forme simple ) qui est prépondérante . sa probabilité d&apos; apparition lors d&apos; un croisement entre deux chromosomes est un paramètre de l&apos; algorithme génétique et dépend du problème et de la technique de recombinaison . la probabilité d&apos; un enjambement est alors comprise entre 0 et 1 strictement . les algorithmes génétiques , afin de permettre la résolution de problèmes , se basent sur les différents principes décrits ci-dessus . le problème théorique de la convergence a été résoluune théorie asymptotique des algorithmes génétiques . raphael cerf , thèse de doctorat , université montpellier ii ( france ) , 1994. par raphaël cerf , en se basant sur la théorie de friedlin weinzel des perturbations stochastiques des systèmes dynamiques . la démonstration de r. cerf montre d&apos; ailleurs que le processus de convergence dépend essentiellement de la mutation , le croisement pouvant être éliminé en théorie . cependant , la preuve théorique de convergence n&apos; a que peu d&apos; utilité dans la pratique , où l&apos; opérateur de croisement fait bien souvent toute la richesse de l&apos; algorithme génétique par rapport à des méthodes de type recuit simulé. l&apos; utilisation du codage binaire ( ex. : 0100110 ) . le contenu de cette population initiale est généré aléatoirement . on attribue à chacune des solutions une note qui correspond à son adaptation au problème . ensuite , on effectue une sélection au sein de cette population . cette technique de sélection choisit toujours les individus possédant les meilleurs scores d&apos; adaptation , le hasard n&apos; entre donc pas dans ce mode de sélection . en fait , si n individus constituent la population , la sélection appliquée consiste à conserver les k meilleurs individus ( au sens de la fonction d&apos; évaluation ) suivant une probabilité qui dépend du rang ( et pas de la fonction d&apos; évaluation ) . appelé aussi roulette ou roue de la fortune , pour chaque individu , la probabilité d&apos; être sélectionné est proportionnelle à son adaptation au problème . afin de sélectionner un individu , on utilise le principe de la roue de la fortune biaisée . cette roue est une roue de la fortune classique sur laquelle chaque individu est représenté par une portion proportionnelle à son adaptation . on effectue ensuite un tirage au sort homogène sur cette roue . cette technique utilise la sélection proportionnelle sur des paires d&apos; individus , puis choisit parmi ces paires l&apos; individu qui a le meilleur score d&apos; adaptation . la sélection se fait aléatoirement , uniformément et sans intervention de la valeur d&apos; adaptation . chaque individu a donc une probabilité 1 / p d&apos; être sélectionné , où p est le nombre total d&apos; individus dans la population . lorsque deux chromosomes ont été sélectionnés , on réalise un croisement . on effectue ensuite des mutations sur une faible proportion d&apos; individus , choisis aléatoirement . ce processus nous fournit une nouvelle population . on réitère le processus un grand nombre de fois de manière à imiter le principe d&apos; évolution , qui ne prend son sens que sur un nombre important de générations . on peut arrêter le processus au bout d&apos; un nombre arbitraire de générations ou lorsqu&apos; une solution possède une note suffisamment satisfaisante . considérons par exemple les deux individus suivants dans une population où chaque individu correspond à une chaîne de 8 bits : a = 00110010 et b = 01010100 . on ajuste la probabilité d&apos; enjambement à 0,7 ( 8 x 0,7 = 5,6 alors on va croiser 6bits sur les 8bits des deux mots ) . supposons ici que l&apos; enjambement ait lieu , on choisit alors aléatoirement la place de cet enjambement ( toutes les places ayant la même probabilité d&apos; être choisies ) . en supposant que l&apos; enjambement ait lieu après le deuxième allèle , on obtient a &apos; et b &apos; ( « : » marquant l&apos; enjambement sur a et b ) . ensuite , chacun des gènes des fils ( ici , chacun des bits des chaînes ) est sujet à la mutation . de la même manière que pour les combinaisons , on définit un taux de mutation ( très bas , de l&apos; ordre de 0,001 - ici on peut s&apos; attendre à ce que a &apos; et b &apos; restent identiques ) . en effectuant ces opérations ( sélection de deux individus , enjambement , mutation ) , un nombre de fois correspondant à la taille de la population divisée par deux , on se retrouve alors avec une nouvelle population ( la première génération ) ayant la même taille que la population initiale , et qui contient globalement des solutions plus proches de l&apos; optimum . le principe des algorithmes génétiques est d&apos; effectuer ces opérations un maximum de fois de façon à augmenter la justesse du résultat . il existe plusieurs techniques qui permettent éventuellement d&apos; optimiser ces algorithmes , on trouve par exemple des techniques dans lesquelles on insère à chaque génération quelques individus non issus de la descendance de la génération précédente mais générés aléatoirement . ainsi , on peut espérer éviter une convergence vers un optimum local . pour les algorithmes génétiques , un des facteurs les plus importants , si ce n&apos; est le plus important , est la façon dont sont codées les solutions ( ce que l&apos; on a nommé ici les chromosomes ) , c&apos; est-à-dire les structures de données qui coderont les gènes . ce type de codage est certainement le plus utilisé car il présente plusieurs avantages . son principe est de coder la solution selon une chaîne de bits ( qui peuvent prendre les valeurs 0 ou 1 ) . les raisons pour lesquelles ce type de codage est le plus utilisé sont tout d&apos; abord historiques . en effet , lors des premiers travaux de holland , les théories ont été élaborées en se basant sur ce type de codage . et même si la plupart de ces théories peuvent être étendues à des données autres que des chaînes de bits , elles n&apos; ont pas été autant étudiées dans ces contextes . cependant , l&apos; avantage de ce type de codage sur ses concurrents a tendance à être remis en question par les chercheurs actuels qui estiment que les démonstrations de holland sur les avantages supposés de ce codage ne sont pas révélatrices. type . le brassage génétique sur lequel repose l&apos; efficacité des algorithmes génétiques sera donc plus important dans le premier cas . il existe cependant au moins un côté négatif à ce type de codage qui fait que d&apos; autres existent . en effet , ce codage est souvent peu naturel par rapport à un problème donné ( l&apos; évolution des poids d&apos; arcs dans un graphe par exemple est difficile à coder sous la forme d&apos; une chaîne de bits ) . une autre manière de coder les chromosomes d&apos; un algorithme génétique est donc le codage à l&apos; aide de caractères multiples ( par opposition aux bits ) . souvent , ce type de codage est plus naturel que celui énoncé ci-avant . c&apos; est d&apos; ailleurs celui-ci qui est utilisé dans de nombreux cas poussés d&apos; algorithmes génétiques que nous présenterons par la suite . ce codage utilise une structure arborescente avec une racine de laquelle peuvent être issus un ou plusieurs fils . un de leurs avantages est qu&apos; ils peuvent être utilisés dans le cas de problèmes où les solutions n&apos; ont pas une taille finie . en principe , des arbres de taille quelconque peuvent être formés par le biais d&apos; enjambements et de mutations . le problème de ce type de codage est que les arbres résultants sont souvent difficiles à analyser et que l&apos; on peut se retrouver avec des arbres « solutions » dont la taille sera importante alors qu&apos; il existe des solutions plus simples et plus structurées à côté desquelles sera passé l&apos; algorithme . de plus , les performances de ce type de codage par rapport à des codages en chaînes n&apos; ont pas encore été comparées ou très peu . en effet , ce type d&apos; expérience ne fait que commencer et les informations sont trop faibles pour se prononcer . finalement , le choix du type de codage ne peut pas être effectué de manière sûre dans l&apos; état actuel des connaissances . selon les chercheurs dans ce domaine , la méthode actuelle à appliquer dans le choix du codage consiste à choisir celui qui semble le plus naturel en fonction du problème à traiter et développer ensuite l&apos; algorithme de traitement . comme cela a été dit plus haut , les algorithmes génétiques peuvent être une bonne solution pour résoudre un problème . néanmoins , leur utilisation doit être conditionnée par certaines caractéristiques du problème . le temps de calcul de la fonction d&apos; évaluation ( fitness en anglais ) doit être raisonnablement court . en effet , celle-ci sera évaluée de nombreuses fois . nombre de solutions important : les performances des algorithmes génétiques par rapport aux algorithmes classiques sont plus marquées lorsque les espaces de recherches sont importants . en effet , pour un espace dont la taille est faible , il peut être plus sûr de parcourir cet espace de manière exhaustive afin d&apos; obtenir la solution optimale en un temps qui restera somme toute correct . au contraire , utiliser un algorithme génétique engendrera le risque d&apos; obtenir une solution non optimale ( voir la section limites ) en un temps qui restera sensiblement identique . pas d&apos; algorithme déterministe adapté et raisonnable . lorsque l&apos; on préfère avoir une solution relativement bonne rapidement plutôt qu&apos; avoir la solution optimale en une durée indéfinie . c&apos; est ainsi que les algorithmes génétiques sont utilisés pour la programmation de machines qui doivent être très réactives aux conditions environnantes . le problème du voyageur de commerce : ce problème est un classique d&apos; algorithmique . son sujet concerne les trajets d&apos; un voyageur de commerce . celui-ci doit s&apos; arrêter en plusieurs points , et le but de l&apos; algorithme est d&apos; optimiser le trajet de façon que celui-ci soit le plus court possible . dans le cas où huit points d&apos; arrêts existent , cela est encore possible par énumération ( 2520 possibilités : pour n arrêts , n supérieur ou égal à 3 , il y a \ scriptscriptstyle \ frac { ( n-1 ) ! } { 2 } chemins possibles ) mais ensuite , l&apos; augmentation du nombre d&apos; arrêts fait suivre au nombre de possibilités une croissance exponentielle . on recopie le premier chemin jusqu&apos; à une « cassure » . on recopie ensuite les villes du second chemin . si la ville est déjà utilisée , on passe à la ville suivante . soit un itinéraire qui contient 9 clients , on suppose que l&apos; on croise les deux chemins suivants ( un chiffre représente un client ) . on croise ces deux chemins après le locus 4 : on obtient le chemin fils . en partant de ce principe , de nombreux algorithmes génétiques ont été développés , chacun utilisant différentes variantes afin de se rapprocher le plus possible du maximum dans tous les cas . il existe d&apos; ailleurs un concours sur internet qui propose de développer un algorithme à même de trouver le meilleur chemin sur un problème de voyageur de commerce de 250 villeshttp : / / labo.algo.free.fr / defi250 / defi _ des _ 250 _ villes.html. un premier exemple est une réalisation effectuée au sein de l&apos; entreprise motorola . le problème pour lequel motorola a utilisé les algorithmes génétiques concerne les tests des applications informatiques . en effet , lors de chaque changement apporté à une application , il convient de retester l&apos; application afin de voir si les modifications apportées n&apos; ont pas eu d&apos; influence négative sur le reste de l&apos; application . pour cela , la méthode classique est de définir manuellement des plans de test permettant un passage dans toutes les fonctions de l&apos; application . mais ce type de test nécessite un important travail humain . le but de motorola a donc été d&apos; automatiser cette phase de définition de plans de tests . ils ont pour cela défini un algorithme où chaque individu correspond à un résultat d&apos; exécution d&apos; un programme ( l&apos; enchaînement des valeurs passées au programme ) et où chaque individu reçoit une valeur qui correspond à son aptitude à passer dans un maximum de parties du code de l&apos; application . finalement , l&apos; outil développé permet , à l&apos; aide d&apos; un algorithme génétique , de faire évoluer ces programmes de test pour maximiser les zones testées de façon que lors de modifications apportées à l&apos; application on puisse soumettre celle-ci à des tests efficaces . d&apos; autres domaines industriels utilisent aujourd&apos; hui les algorithmes génétiques . on peut retenir entre autres l&apos; aérodynamique où des optimisations sont mises au point à l&apos; aide de ces outils , l&apos; optimisation structurelle , qui consiste à minimiser le poids d&apos; une structure en tenant compte des contraintes de tension admissibles pour les différents éléments , et la recherche d&apos; itinéraires : ces algorithmes ont été utilisés par la nasa pour la mission d&apos; exploration de mars , dans la gestion des déplacements du robot pathfinder . la société sony les a aussi utilisés dans son robot aibo . en effet , ce robot a « appris » à marcher dans un dispositif expérimental où son système de commande a été soumis à une évolution artificielle . différents modes de commandes ont été testés , les plus performants ont été croisés et le résultat a été très positif . de génération en génération , le robot s&apos; est redressé , puis a commencé à marcher en chutant souvent et a fini par marcher d&apos; un pas assuré . les algorithmes génétiques sont mis en œuvre dans certains outils d&apos; informatique décisionnelle ou de data mining par exemple pour rechercher une solution d&apos; optimum à un problème par mutation des attributs ( des variables ) de la population étudiée . le temps de calcul : par rapport à d&apos; autres métaheuristiques , ils nécessitent de nombreux calculs , en particulier au niveau de la fonction d&apos; évaluation . ils sont le plus souvent difficiles à mettre en œuvre : des paramètres comme la taille de la population ou le taux de mutation sont parfois difficiles à déterminer . or le succès de l&apos; évolution en dépend et plusieurs essais sont donc nécessaires , ce qui limite encore l&apos; efficacité de l&apos; algorithme . en outre , choisir une bonne fonction d&apos; évaluation est aussi critique . celle-ci doit prendre en compte les bons paramètres du problème . elle doit donc être choisie avec soin . il faut aussi noter l&apos; impossibilité d&apos; être assuré , même après un nombre important de générations , que la solution trouvée soit la meilleure . on peut seulement être sûr que l&apos; on s&apos; est approché de la solution optimale ( pour les paramètres et la fonction d&apos; évaluation choisie ) , sans la certitude de l&apos; avoir atteinte. n chaînes de caractères ou de bits . 1 caractère correspond à 1 chromosome. à chaque chaîne , une note correspondant à son adaptation au problème. tirage au sort de n / 2 couples de chaînes sur une roue biaisée . chaque chaîne a une probabilité d ’ être tirée proportionnelle à son adaptation au problème . optimisation possible : si l ’ individu le plus adapté n ’ a pas été sélectionné , il est copié d ’ office dans la génération intermédiaire à la place d ’ un individu choisi aléatoirement . chaque couple donne 2 chaînes filles . enjambement . probabilité : 70 % . emplacement de l&apos; enjambement choisi aléatoirement . croisement en 2 points plus efficace . mutations des chaînes filles . probabilité : de 0,1 à 1 % . inversion d ’ un bit au hasard ou remplacement au hasard d ’ un caractère par un autre . probabilité fixe ou évolutive ( auto-adaptation ) . on peut prendre probabilité = 1 / nombre de bits . les algorithmes génétiques reprennent la théorie de darwin : sélection naturelle de variations individuelles : les individus les plus adaptés ( the fittest ) tendent à survivre plus longtemps et à se reproduire plus aisément . amélioration de la population très rapide au début ( recherche globale ) ; de plus en plus lente à mesure que le temps passe ( recherche locale ) . convergence : la valeur moyenne de la fonction d ’ adaptation a tendance à se rapprocher de celle de l ’ individu le plus adapté : uniformisation croissante de la population . le temps de calcul des algorithmes génétiques croît en n \ ln ( n ) , n étant le nombre de variables . optimisation et algorithmes génétiques , cours en ligne , polytech&apos; lille .
