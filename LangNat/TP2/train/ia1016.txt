vous pouvez partager vos connaissances en l ’ améliorant ( comment ? ) selon les recommandations des projets correspondants . consultez la liste des tâches à accomplir en page de discussion . l ’ artificial intelligence markup language ( aiml ) est un langage dérivé de xml utilisé pour gérer la connaissance des avatars et bots ( robots virtuels ) . ce langage utilise une vingtaine de balises de base . le aiml a été développé par richard wallace ( en ) catégorie : article contenant un appel à traduction en anglais entre 1995 et 2002 . le langage xml appelé aiml a été développé par richard wallace et par la communauté mondiale du logiciel libre entre les années 1995 et 2002 . il a formé la base pour ce qui était initialement une extension d&apos; eliza appelée « a.l.i.c.e. » ( artificial linguistic internet computer entity ) , qui a remporté le concours annuel du prix loebner d&apos; intelligence artificielleloebner.net à trois reprises , et a également été le champion du chatterbox challengechatterboxchallenge.com ( concours de chatterbox ) en 2004 . parce que le programme aiml a.l.i.c.e. a été publié sous la licence gnu gpl et parce que la plupart des interpréteurs aiml sont sous licence libre ou open source , de nombreux « clones d&apos; alicebot » ont été créés sur la base de l&apos; implémentation initiale du programme et de sa base de connaissances aiml . des programmes aiml gratuitsaitools.org en plusieurs langages ont été développés et mis à disposition par la communauté des utilisateurs . il y a des interprètes aiml disponibles en java , ruby , python , c + + , c # , pascal , et d&apos; autres langages ( voir ci-dessous ) . une spécification semi-formelleaitools.org et un schéma xml du w3c pour aimlaitools.org sont disponibles . aiml contient plusieurs éléments . les plus importants sont décrits plus en détail ci-dessous . lorsque cette catégorie est chargée , un bot aiml répondra à l&apos; entrée « quel est votre nom » par la réponse : « mon nom est jean » . correspondra à un nombre infini d&apos; entrées , y compris « quel est votre nom » , « quelle est votre pointure de chaussure » , « quel est votre but dans la vie » , etc. la syntaxe du modèle aiml est très simple , beaucoup moins complexe que les expressions régulières et en tant que telle d&apos; un niveau inférieur à 3 dans la hiérarchie de chomsky . pour compenser la simple capacité de mise en correspondance des motifs , les interpréteurs aiml peuvent fournir des fonctions de prétraitement pour développer les abréviations , supprimer les fautes d&apos; orthographe , etc. mon nom est jean . mon nom est &lt; bot name = &quot; name &quot; / &gt; . vous m&apos; avez dit que vous avez &lt; get name = &quot; user-age &quot; / &gt; ans. qui remplacera l&apos; âge de l&apos; utilisateur ( s&apos; il est connu ) dans la phrase . les éléments de modèles incluent le formatage du texte de base , les réponses conditionnelles ( if-then / else ) , et les réponses aléatoires . la première catégorie répond simplement une entrée « quel est votre nom » avec une déclaration du nom du bot . la deuxième catégorie , cependant , dit que l&apos; entrée « comment t&apos; appelles-tu » doit être redirigé vers la catégorie qui correspond à l&apos; entrée « quel est ton nom » — en d&apos; autres termes , elle dit que les deux phrases sont équivalentes . les modèles peuvent contenir d&apos; autres types de contenu , qui peuvent être traités par n&apos; importe quelle interface au travers de laquelle le bot parle . ainsi , par exemple , un modèle peut utiliser des balises html pour le formatage , qui peut être ignoré par les clients qui ne supportent pas html . aiml est considéré comme intelligent et simple , et un bon début pour les débutants écrivant des robots simples . &#91; réf. nécessaire &#93; catégorie : article à référence nécessaire cependant , il est difficile de maintenir et d&apos; écrire des robots plus complexes et il &#91; qui ? &#93; est doté de faibles capacités pour traiter les correspondances . pourtant , a.l.i.c.e. est un chatbot élaboré arrivé 2e au concours loebner de 2010bruce wilcox , beyond façade : pattern matching for natural language applications .
