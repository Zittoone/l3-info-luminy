vous pouvez partager vos connaissances en l ’ améliorant ( comment ? ) selon les recommandations des projets correspondants . si vous disposez d&apos; ouvrages ou d&apos; articles de référence ou si vous connaissez des sites web de qualité traitant du thème abordé ici , merci de compléter l&apos; article en donnant les références utiles à sa vérifiabilité et en les liant à la section « notes et références » ( modifier l&apos; article , comment ajouter mes sources ? ) . la génération de colonnes est une méthode pour résoudre efficacement les programmes linéaires de grande tailletemplate : ouvrage . elle repose sur la décomposition de dantzig-wolfe ( en ) catégorie : article contenant un appel à traduction en anglais , qui consiste à décomposer l&apos; ensemble des contraintes en deux sous-ensembles . l&apos; idée centrale est que les programmes linéaires de grande taille ont trop de variables ( ou colonnes ) pour qu&apos; on puisse les représenter toutes de manière explicite . a l&apos; optimum , la plupart des variables sont hors base et , très souvent , la plupart d&apos; entre elles sont nulles , c&apos; est-à-dire que seul un ( petit ) sous-ensemble de variables doit être pris en compte pour résoudre le problème . une méthode utilisant la génération de colonnes initialise le programme linéaire avec un sous-ensemble de colonnes de petite taille . le mécanisme de la génération de colonnes consiste alors à générer , au sein d&apos; un algorithme à plusieurs étapes , les variables qui sont susceptibles d&apos; améliorer la solution courante , c&apos; est-à-dire celles qui ont des coûts réduits négatifs . l&apos; efficacité de la méthode est très dépendante du mécanisme utilisé pour générer des colonnes . en effet , le sous-problème à résoudre est souvent np-difficile . les méthodes utilisant la génération de colonnes ont souvent des problèmes de convergence dus au fait que le problème dual est très peu contraint au début de la méthode . en pratique , ces problèmes vont amener la méthode à effectuer un grand nombre d&apos; itérations qui ne permettent plus d&apos; améliorer la solution courante .
