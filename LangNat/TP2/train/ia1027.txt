vous pouvez partager vos connaissances en l ’ améliorant ( comment ? ) selon les recommandations des projets correspondants . pour les articles homonymes , voir algorithme de ford-fulkerson . l&apos; algorithme de bellman-ford , aussi appelé algorithme de bellman – ford – moorepar exemple dans template : citation , note de stasys jukna et georg schnitger , parue dans theoretical computer science 628 ( 2016 ) 101 – 109 . , est un algorithme qui calcule des plus courts chemins depuis un sommet source donné dans un graphe orienté pondéré . il porte le nom de ses inventeurs richard bellman et lester randolph ford junior ( publications en 1956 et 1958 ) , et de edward forrest moore qui le redécouvrit en 1959 . contrairement à l&apos; algorithme de dijkstra , l&apos; algorithme de bellman-ford autorise la présence de certains arcs de poids négatif et permet de détecter l&apos; existence d&apos; un circuit absorbant , c&apos; est-à-dire de poids total strictement négatif , accessible depuis le sommet source. d &#91; t , k &#93; est la distance du sommet source s à t avec un chemin qui contient au plus k arcs. d &#91; t , k &#93; = min \ left &#91; d &#91; t , k-1 &#93; , min _ { \ text { arc } ( u , t ) } ( d &#91; u , k-1 &#93; + poids ( u , t ) ) \ right &#93; . on donne d&apos; abord une version en pseudo-code qui utilise directement la relation de récurrence donnée dans la section précédente . la première amélioration réduit le nombre de relaxations . si d &#91; u &#93; n&apos; a pas été modifié depuis une relaxation d&apos; un arc ( u , t ) , alors il n&apos; y a pas besoin de relâcher les arcs ( u , t ) une deuxième fois . ainsi , comme le nombre de sommets avec la distance correcte augmente au cours de l&apos; algorithme , le nombre d&apos; arcs à relâcher diminue à chaque itération . on gagne un facteur constant sur la complexité pour des graphes denses . dans les réseaux informatiques , l&apos; algorithme de bellman-ford est utilisé pour déterminer le cheminement des messages , à travers le protocole de routage rip ( en ) request for comments no 1058 . . on peut utiliser l&apos; algorithme de bellman-ford pour résoudre un problème de programmation linéaire où les contraintes sont des différences . par exemple ː x - y ≤ 5 , y - t ≤ 10 , etc. plus précisément , un tel système a une solution si et seulement si le graphe associé n&apos; a pas de cycle de poids négatifstemplate : article , template : ouvrage .
