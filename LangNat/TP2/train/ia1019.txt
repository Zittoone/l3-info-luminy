améliorez sa vérifiabilité en les associant par des références à l&apos; aide d&apos; appels de notes . aidez à ajouter des liens en plaçant le code &#91; &#91; algorithme anytime &#93; &#93; dans les articles relatifs au sujet . en informatique , un algorithme anytime ( &quot; à tout moment &quot; ) est un algorithme capable de donner une solution valide à un problème même s&apos; il est interrompu avant d&apos; avoir terminé . l&apos; algorithme trouve de meilleures solutions au fur et à mesure de son exécution . la plupart des algorithmes s&apos; exécutent complètement : ils donnent une seule réponse , après une certaine quantité de calculs . toutefois , dans certains cas il est souhaitable d&apos; interrompre le traitement avant sa fin normale , par exemple pour réallouer des ressources critiques . les algorithmes traditionnels ne fournissent alors aucune réponse utilisable . les algorithmes anytime en revanche donnent une réponse partielle , dont la qualité dépend de la quantité de calculs déjà effectués , et qui est une approximation de la réponse correcte. produire des résultats de meilleure qualité , en échange de temps de calcul supplémentaire . ils sont flexibles en temps et en ressources . ils sont importants dans le domaine de l&apos; intelligence artificielle pour des problèmes difficiles et longs à calculer , car ils apportent une réponse acceptable en un temps raisonnable . par exemple , il est crucial pour un système de tir sur cible mouvante d&apos; effectuer ses calculs très rapidement , et même une réponse approchée peut être un progrès significatif à condition qu&apos; elle arrive suffisamment tôt . les parcours d&apos; arbres de décision sont friands de la propriété &quot; anytime &quot; : en effet il est souvent trop long , voire impossible , de parcourir l&apos; arbre en entier . une particularité des algorithmes anytime est leur faculté de donner plusieurs réponses successives , pour une même donnée d&apos; entrée . on peut mesurer de façon bien définie les progrès réalisés sur les réponses successives , et décider d&apos; allouer ou pas plus de temps pour affiner la solution . michael c. horsch and david poole , an anytime algorithm for decision making under uncertainty , in proc . 14th conference on uncertainty in artificial intelligence ( uai-98 ) , madison , wisconsin , usa , july 1998 , pages 246-255 . wallace , r. , and freuder , e. 1995 . anytime algorithms for constraint satisfaction and sat problems . paper presented at the ijcai-95 workshop on anytime algorithms and deliberation scheduling , 20 august , montreal , canada . zilberstein , s. 1993 . operational rationality through compilation of anytime algorithms . ph.d. diss . , computer science division , university of california at berkeley .
