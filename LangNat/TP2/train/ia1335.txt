un langage orienté cadre est une technique de représentation des connaissances utilisée en intelligence artificielle : les cadres sont stockés en tant qu&apos; ontologies d&apos; ensembles et de sous-ensembles constitués de cadre . ils sont similaires aux hiérarchies de classes des langages à objet bien qu&apos; ils soient conçus dans un but fondamentalement différents . les cadres sont destinés à une représentation explicite et intuitive des connaissances , alors que les objets sont conçus pour l&apos; encapsulation et le masquage des informations privées . ils sont apparus dans le contexte des recherches en intelligence artificielle , tandis que les objets sont apparus dans le cadre du génie logiciel . en pratique les deux technologies se recouvrent assez largement , que ce soit en termes techniques ou de possibilités . les travaux préliminaires sur les cadres se sont inspirés des recherches psychologiques des années 1930 . elles suggéraient que les gens utilisent des connaissances stéréo-typiques pour interpréter et agir dans de nouvelles situationstemplate : ouvrage . le terme frame ( cadre ) a d&apos; abord été utilisé par marvin minsky comme paradigme de compréhension du raisonnement visuel et de traitement du langagetemplate : ouvrage . dans ce type de problèmes , comme dans bien d&apos; autres , le nombre de solution potentielles est énorme , y compris pour les plus exemples les plus simples , par exemple , extraire les phonèmes d&apos; un flux audio brut ou détecter les arêtes d&apos; un objet . ce sont des tâches qui peuvent sembler simples pour un humain , mais qui sont en réalité plutôt complexes . leur difficulté n&apos; étaient probablement pas bien comprise à l&apos; époque ou les chercheurs ont commencé à étudier la possibilité de les faire faire à des ordinateurs . l&apos; intention initiale des cadres , ou scripts comme ils étaient aussi appelés , étaient de permettre de modéliser le contexte d&apos; un problème et ainsi de réduire l&apos; espace des solutions potentielles ( l&apos; espace de recherche ) automatiquement et de manière significative . la même idée a été adoptée par schank and abelson , qui l&apos; utilisaient pour illustrer comment un système d&apos; intelligence artificielle pouvait traiter certaines interactions humaines habituelles comme une commande dans un restauranttemplate : ouvrage . ces interactions ont été modélisées en tant que cadres avec des « emplacements » ( slots ) qui stockaient les informations pertinentes de chacun d&apos; eux . les emplacements sont analogues aux propriétés / attributs des langages à objets aux relations des modèles entité / relation . les emplacements ont souvent une valeur par défaut , qui doit parfois être reprécisée lors de chaque instance d&apos; exécution d&apos; un scénario . notre tâche de commande était contrôlée en démarrant avec une instance basique du cadre , puis chaque valeur était instanciée et précisée de manière appropriée . le cadre abstrait représentait essentiellement une classe d&apos; objet , et les instances de ce cadre une instance d&apos; objet . dans ce travail initial , l&apos; emphase était mise sur la représentation statique des données du cadre . différents mécanismes ont été développés pour définir le domaine de définition d&apos; un emplacement , les valeurs par défaut , etc. ces systèmes préliminaires possédaient tout de même des capacités procédurales . une technique classique était l&apos; utilisation de « déclencheurs » ( triggers ) ( similaire au concept de trigger dans les bases de données ) associés aux emplacements . un déclencheur était constitué de code procédural associé à un emplacement . le code était exécuté avant et / ou après l&apos; accès ou la modification d&apos; un emplacement . comme les classes d&apos; objet , les cadres étaient organisées en hiérarchies de subsomption . par exemple , un cadre de base peut être « les commandes d&apos; un restaurant » . une instance de ce cadre peut être « joe commande un burger au fast food local » . une spécialisation de ce cadre ( une sous-classe , par essence ) pourrait être « commander dans un restaurant gastronomique » . le cadre « restaurant gastronomique » hériterait de toutes les valeurs par défaut du cadre « restaurant » et soit ajouterait plus d&apos; emplacements soit changerait une ou plusieurs des valeurs par défaut ( par ex. , la gamme de prix ) du cadre spécialisétemplate : ouvrage , template : article . les premières recherches sur ce sujet ont pour la plupart été inspirées par des résultats de psychologie expérimentale ( par ex. schank and abelson ) et des tentatives de conception d&apos; outils de représentations des connaissances correspondant à la manière dont les humain étaient supposés fonctionner . ces chercheurs n&apos; étaient pas vraiment intéressés par le formalisme mathématique , car ils pensaient que ce type de formalisme n&apos; étaient pas forcément de bons modèles de la manière dont la personne lambda conceptualise le monde . la manière dont les humains utilisent le langage , par exemple , est souvent très loin d&apos; être parfaitement cohérente logiquement . dans le même esprit , en linguistique , charles fillmore a commencé dans les années 1970 à travailler sur sa théorie de cadre sémantique , qui conduira plus tard à la création de ressources comme framenettemplate : article . cette théorie était motivée par des réflexions sur les langages et la cognition humaine . des chercheurs comme ron brachman d&apos; autre part voulaient fournir aux chercheurs en ia la puissance de raisonnement et les formalismes mathématiques associés à la logique . ils cherchaient à faire correspondre les cadres , emplacements , les contraintes et les règles d&apos; un langage à cadre à la logique et la théorie des ensembles . un des bénéfices de cette approche est que la validation , et même la création des modèles pourrait être automatisée grâce à la preuve automatique de théorème ou des techniques de raisonnement automatique . l&apos; inconvénient était que la spécification initiale du modèle en utilisant un langage doté d&apos; une sémantique formelle était sans doute plus difficile . cette évolution illustre une division classique dans la recherche en ia surnommée les tirés « tirés à quatre épingles contre débraillé » ( neats vs scruffies ) . les « quatre épingles » étaient des chercheurs qui plaçaient tous leurs espoirs sur la rigueur mathématique et la précision , par le formalisme par la logique du premier ordre et la théorie des ensembles . les « débraillés » étaient davantage intéressés par la modélisation des connaissances par des représentations intuitives et signifiant quelque chose pour la psyché humainetemplate : ouvrage . le plus intéressant des langages de l&apos; approche formelle était kl-onetemplate : article . kl-one a plus tard engendré plusieurs langages à cadre successeurs . la sémantique formelle des langages à la kl-one leur a fourni in nouveau type de raisonnement automatique appelé le classifieur . ce sont des moteurs qui analysent les différentes déclarations des programmes du langage : les définitions d&apos; ensembles , de sous-ensembles , de relations , etc. il en déduit automatiquement des relations supplémentaires et peut détecter des incohérences entre différentes parties du modèle . de cette manière , beaucoup des taches qui seraient habituellement exécutées par un moteur d&apos; inférence en chaînage avant ou arrière peuvent désormais être effectuées par le classifieurtemplate : article . cette technologie est particulièrement pertinente dans le cadre d&apos; internet . le fait que le formalisme de langages comme le précédent puisse être utile dans la gestion de données très peu formelles et non structurées comme celles d&apos; internet est particulièrement intéressant . sur internet , il n&apos; est tout simplement pas possible d&apos; imposer que tous les systèmes standardisent leur modèle de données . il est inévitable que la terminologie sera utilisée de multiples manières incohérentes entre elles . dans ce cadre , la classification automatique offerte par un classifieur constitue un outil de base puissant pour aider à ramener de l&apos; ordre et de la cohérence dans ce type de jeu de données . la vision d&apos; un internet amélioré , dans lequel les pages sont ordonnées non seulement par mots clés textuels mais aussi par classification de concepts est connue sous le nom de web sémantique . les technologie de classification originellement développées pour les langages à cadre sont une technologie clé de son émergencetemplate : article , template : lien web . le débat 4 épingles contre débraillés a aussi émergé dans le monde du web sémantique , et a culminé avec création de la communauté linking open data — qui se concentre plus sur la publication des données sur le web que sur la modélisation . un exemple simple de concepts modélisés dans un langage à cadre est l&apos; ontologie friend of a friend ( foaf ) définie dans le cadre du web sémantique comme fondement du réseautage social et des systèmes de calendrier . le cadre principal de cet exemple simple est le cadre person ( personne ) . des emplacements sont email , home page , phone , ( mail , page personnelle , téléphone ) etc. les centres d&apos; intérêt de chaque personne peuvent être représentés par des cadres additionnels représentant l&apos; espace du commerce et des loisirs . l&apos; emplacement knows ( connait ) lie chaque personne à d&apos; autres personnes . des valeurs par défaut pour les centres d&apos; intérêt d&apos; une personne peuvent être déduits des centres d&apos; intérêt de son réseau de connaissancestemplate : lien web . les premiers langages par cadre étaient des langages ad-hoc dédiés à des projets de recherche spécifique et n&apos; étaient pas empaquetés pour la réutilisation par d&apos; autres . de manière identique aux moteurs d&apos; inférence de systèmes experts , les chercheurs ont bientôt réalisé le bénéfice à séparer le cœur de l&apos; infrastructure et à développer des langages indépendant de l&apos; application . l&apos; un des premiers langages à cadre généraliste est krl . l&apos; un de ceux qui ont le plus inspiré est kl-one . l&apos; un de ses successeurs les plus utilisés était le langage loom , de robert macgregor , du information sciences institute . dans les années 1980 , l&apos; intelligence artificielle a beaucoup intéressé les milieux d&apos; affaire , en particulier les systèmes experts . de nombreux produits commerciaux pour le développement de bases de connaissances ont été développés . ces jeunes produits étaient souvent développés en lisp et intégraient des constructions comme des règles si-alors pour le raisonnement logique , avec des hiérarchies de cadre pour la représentation des données . l&apos; un des plus connus de ces outils lisp pour les bases de connaissances était knowledge engineering environment ( kee ) d&apos; intellicorp . kee fournissait un langage à cadres complet avec héritage multiple , emplacements , déclencheurs , valeurs par défauts , et un moteur de règle capable de raisonnement en chaînage avant comme arrière . comme la plupart de ces logiciels d&apos; intelligence artificielle était codé en lisp sur des plate-forme lisp machine mais fut finalement porté pour pcs et stations de travail unixtemplate : article . le projet de recherche du web sémantique a relancé l&apos; intérêt pour la classification automatique et les langages à cadre . un exemple : le standard web ontology language ( owl ) pour la description d&apos; informations sur internet . owl est un standard pour fournir une couche sémantique au-dessus d&apos; internet . l&apos; objectif est d&apos; organiser le web en fonction de concepts , eux-mêmes organisés en ontologies , plutôt que par mots clés , comme beaucoup d&apos; applications des années 1990 et 2000 et ultérieures ( par ex. les moteurs de recherche et d&apos; indexation comme google ) . le nom du langage owl est en lui-même un exemple de l&apos; intérêt d&apos; un web sémantique . si quelqu&apos; un cherche « owl » en utilisant un moteur de recherche classique la plupart des pages résultats ( en anglais ) parleront d&apos; un animal ( owl veut dire chouette en anglais ) . un web sémantique permet de se concentrer sur les concepts et les définir . il est alors possible de spécifier le concept &quot; web ontology language &quot; et les utilisateurs n&apos; ont plus à se soucier des différents synonymes ou acronymes une fois qu&apos; ils ont choisi le concept qu&apos; ils cherchent , ils sont éliminés de la liste de résultats ( par exemple tout ce qui concerne l&apos; oiseau ) . en plus d&apos; owl d&apos; autres standards , comme oil and daml , sont pertinents dans le cadre du web sémantique et ont été influencés par les langages à cadres . l&apos; outil libre protege de la stanford university fournit un éditeur d&apos; ontologie basé sur owl qui a toutes les possibilités d&apos; un classifieur . les langages à cadre et les langages à objet se recouvrent significativement . les buts et les terminologies des deux communautés étaient différents mais quand ils sont sortis des laboratoires et des milieux académiques les utilisateurs tendaient à peu se soucier des différences de philosophies pour se concentrer sur les possibilités offertes , en prenant le meilleur de chacune des communautés indifféremment de l&apos; origine des idées . ce qui relie les deux mondes est la volonté de combler la distance entre les concepts du monde réel et leur implantation logicielle . les deux communautés ont abouti à l&apos; idée de classer les données en taxonomies en partant de types très généraux et en les raffinant en types de plus en plus spécifiques . la principale différence entre les deux paradigmes est l&apos; importance accordée à l&apos; encapsulation . c&apos; était une fonctionnalité critique et fondamentale pour la communauté de l&apos; orienté objet , dans le but de réduire au maximum les interactions possibles entre les composants d&apos; un logiciel . la gestion de systèmes complexes de grande taille était une des motivations principales des technologies orientées objet , et réduire les interactions était une manière de minimiser la complexité du système . c&apos; était une fonctionnalité beaucoup moins critique dans le camp des cadres que l&apos; objectif de fournir un vaste ensemble d&apos; outils potentiels pour représenter des contraintes , des règles et des programmes logiques . dans le monde objet , le contrôle est obtenu en jouant sur la visibilité des méthodes , et les données sont accédées uniquement à l&apos; aide des méthodes . dans l&apos; idéal , accéder à la valeur d&apos; une propriété d&apos; un objet doit être effectué au travers d&apos; un accesseur ( un type de méthode ) . cette méthode est responsable de la validation des données et des contraintes comme le type des données ou sur les valeurs récupérées ou affectées à la propriété . dans les langages par cadre ce même type de contraintes peut être géré de plusieurs manières . les déclencheurs pouvaient être définis pour être lancés avant ou après une affectation ou une lecture de valeur sur un emplacement , des règles pouvaient maintenir le même type de contraintes . les slots eux-même pouvaient être adjoints d&apos; informations additionnelles ( les &quot; facettes &quot; dans certains langages ) , qui permettaient également d&apos; exprimer ce type de contrainte . l&apos; autre grosse différence entre les deux communautés concernait l&apos; héritage multiple ( la possibilité pour un cadre ou une classe d&apos; avoir plusieurs superclasses . ) . c&apos; était une fonctionnalité indispensable pour la communauté cadre . en effet l&apos; objectif était la modélisation du monde d&apos; une manière proche de la manière humaine , et les conceptualisations humaines ne sont en général pas des taxonomies rigides et disjointes . pour de nombreux langages à objets , surtout les plus récents , l&apos; héritage singulier était soit désiré soit imposé . l&apos; héritage multiple était vu comme utile en phase de modélisation d&apos; un domaine métier mais à écarter en phase de conception et d&apos; implémentation , pour conserver l&apos; encapsulation et la modularitétemplate : lien web . les langages par cadre initialement , comme krl , n&apos; avaient pas de fonctionnalité de passage de messages , mais sur demande des utilisateurs de ces langages la possibilité de définir des messages , y compris sur des cadres , a finalement été implémentée ( par ex. dans loom , kee ) . du côté des objets , des standards ont émergé qui fournissent des fonctionnalités essentiellement équivalentes à celles que pouvaient fournir les langages par cadre , bien que dans des formats différents et standardisées entièrement dans des bibliothèques d&apos; objet . à titre d&apos; exemple , l&apos; object management group a standardisé des spécifications pour des fonctionnalités comme l&apos; association de données de test et de contraintes à des objets ( analogues à l&apos; usage courant des facettes sur des cadres et aux contraintes de langages comme loom ) et pour l&apos; intégration de langages à règlestemplate : lien web , template : lien web . ( en ) cet article est partiellement ou en totalité issu de l ’ article de wikipédia en anglais intitulé « frame language » ( voir la liste des auteurs ) .
