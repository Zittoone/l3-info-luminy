en informatique , la recherche en faisceau est un algorithme de recherche heuristique qui explore un graphe en ne considérant qu&apos; un ensemble limité de fils de chaque nœud . la recherche en faisceau est une optimisation de l&apos; algorithme de parcours en largeur , en réduisant la mémoire nécessaire à son exécution . contrairement à l&apos; algorithme best-first où l&apos; on explore tous les états candidats à la solution recherchée en partant du meilleur ( estimé ) , la recherche en faisceau n&apos; explore qu&apos; un nombre limité de ces candidatstemplate : en foldoc : recherche en faisceau . la recherche en faisceau utilise l&apos; algorithme de parcours en largeur pour explorer le graphe . à chaque niveau , elle génère tous les successeurs du nœud courant , en les classant selon leur coût heuristiquetemplate : en british museum search . cependant , elle ne mémorise qu&apos; un nombre prédéterminé de ces états à chaque niveau ( nombre appelé la largeur du faisceau ) . plus grande est la largeur , moins d&apos; états sont ignorés . avec une largeur infinie , tous les états sont considérés et l&apos; algorithme devient identique au parcours en largeur . la largeur du faisceau limite la mémoire requise pour exécuter la recherche . sachant qu&apos; un état d&apos; arrivée ( but de la recherche ) peut être ignoré par l&apos; algorithme , la recherche en faisceau sacrifie la complétude ( garantie que l&apos; algorithme trouvera la solution si elle existe ) et l&apos; optimalité ( garantie de trouver la meilleure solution possible ) . la largeur du faisceau peut être fixe ou variable . un exemple d&apos; approche utilise une largeur minimale ; si aucune solution n&apos; est trouvée , la procédure est répétée avec une largeur plus grandetemplate : en norvig , peter . paradigms of artificial intelligence. http : / / books.google.com / books ? id = x4mhysvjquac &amp; pg = pa196 &amp; lpg = pa196 &amp; dq = beam + search + in + paradigms + of + artificial + intelligence + programming &amp; source = web &amp; ots = 20bh2lb3sc &amp; sig = udbio2qeg8awaysgwcu7gdeoby4 &amp; hl = en &amp; sa = x &amp; oi = book _ result &amp; resnum = 1 &amp; ct = result # ppa196 , m1 programming . le terme de recherche en faisceau ( beam search ) est issu de raj reddy , de l&apos; université carnegie-mellon , en 1976 . une recherche en faisceau est le plus souvent utilisée pour étudier des systèmes trop complexes pour pouvoir stocker la totalité du graphe de recherchetemplate : en furcy , david . koenig , sven . &quot; limited discrepancy beam search &quot; . 2005. http : / / www.ijcai.org / papers / 0596.pdf. par exemple , l&apos; algorithme est utilisé dans de nombreux traducteurs automatiquestemplate : en tillmann , christoph . ney , hermann . &quot; word reordering and a dynamic programming beam search algorithm for statistical machine translation &quot; . http : / / acl.ldc.upenn.edu / j / j03 / j03-1005.pdf. pour sélectionner la meilleure traduction , chaque partie de la phrase est traitée et de très nombreuses définitions du mot apparaissent . en considérant leur structure grammaticale , les meilleures sont conservées . le programme évalue ensuite les traductions selon certains critères , choisissant celle qui semble la plus cohérente . la première utilisation d&apos; une recherche en faisceau a été faite par le harpy speech recognition system en 1976 , à l&apos; ucmtemplate : en lowerre , bruce . &quot; the harpy speech recognition system &quot; , ph.d. thesis , carnegie mellon university , 1976 . le parcours en faisceau a été complété ( de sorte à ce qu&apos; elle termine avec une solution ) en le combinant avec le parcours en profondeur , créant le beam stack searchtemplate : en zhou , rong . hansen , eric . &quot; beam-stack search : integrating backtracking with beam search &quot; . 2005. http : / / www.aaai.org / library / icaps / 2005 / icaps05-010.php et le depth-first beam search , ainsi qu&apos; avec le parcours à écart limité , créant le beam search using limited discrepancy backtracking ( bulb ) . ces algorithmes peuvent retourner rapidement une solution valide ( généralement sous-optimale ) à n&apos; importe quel moment , puis continuent à trouver des meilleures solutions ( par retour sur trace ) jusqu&apos; à converger vers une solution optimale . ( en ) cet article est partiellement ou en totalité issu de l ’ article de wikipédia en anglais intitulé « beam search » ( voir la liste des auteurs ) .
