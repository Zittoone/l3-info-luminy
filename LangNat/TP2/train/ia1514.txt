pour les articles homonymes , voir réseau de neurones ( biologie ) et réseau ( homonymie ) . si vous disposez d&apos; ouvrages ou d&apos; articles de référence ou si vous connaissez des sites web de qualité traitant du thème abordé ici , merci de compléter l&apos; article en donnant les références utiles à sa vérifiabilité et en les liant à la section « notes et références » ( modifier l&apos; article , comment ajouter mes sources ? ) . un réseau de neurones artificiels , ou réseau neuronal artificiel , est un ensemble d&apos; algorithmes dont la conception est à l&apos; origine très schématiquement inspirée du fonctionnement des neurones biologiques , et qui par la suite s&apos; est rapproché des méthodes statistiquestemplate : harv . les réseaux de neurones sont généralement optimisés par des méthodes d ’ apprentissage de type probabiliste , en particulier bayésien . ils sont placés d ’ une part dans la famille des applications statistiques , qu ’ ils enrichissent avec un ensemble de paradigmes ces paradigmes correspondent aux différents types d&apos; apprentissage par réseau neuronal , notamment les apprentissages supervisé ou non et l&apos; apprentissage par renforcement. permettant de créer des classifications rapides ( réseaux de kohonen en particulier ) , et d ’ autre part dans la famille des méthodes de l ’ intelligence artificielle auxquelles ils fournissent un mécanisme perceptif indépendant des idées propres de l&apos; implémenteur , et fournissant des informations d&apos; entrée au raisonnement logique formel ( voir deep learning ) . en modélisation des circuits biologiques , ils permettent de tester quelques hypothèses fonctionnelles issues de la neurophysiologie , ou encore les conséquences de ces hypothèses pour les comparer au réel . les réseaux neuronaux sont construits sur un paradigme biologique , celui du neurone formel ( comme les algorithmes génétiques le sont sur la sélection naturelle ) . ces types de métaphores biologiques sont devenues courantes avec les idées de la cybernétique et biocybernétique . celui-ci ne prétend pas davantage décrire le cerveau qu&apos; une aile d&apos; avion , par exemple , copie celle d&apos; un oiseau &#91; pertinence contestée &#93; . en particulier le rôle des cellules gliales n&apos; est pas simulé pour le moment ( 2010 ) . les neurologues warren mcculloch et walter pitts publièrent dès la fin des années 1950 les premiers travaux sur les réseaux de neurones , avec un article fondateur : what the frog ’ s eye tells the frog ’ s brainlettvin , j.y. , maturana , h.r. , mcculloch , w.s. , &amp; pitts , w.h. ; what the frog&apos; s eye tells the frog&apos; s brain , ( pdf , 14 pages ) ( 1959 ) ; proceedings of the ire , vol . 47 , no . 11 , pp. 1940-51 . ( ce que l&apos; œil d&apos; une grenouille dit à son cerveau ) . ils constituèrent ensuite un modèle simplifié de neurone biologique communément appelé neurone formel . ils montrèrent que des réseaux de neurones formels simples peuvent théoriquement réaliser des fonctions logiques , arithmétiques et symboliques complexes . le neurone formel est conçu comme un automate doté d&apos; une fonction de transfert qui transforme ses entrées en sortie selon des règles précises . par exemple , un neurone somme ses entrées , compare la somme résultante à une valeur seuil , et répond en émettant un signal si cette somme est supérieure ou égale à ce seuil ( modèle ultra-simplifié du fonctionnement d&apos; un neurone biologique ) . ces neurones sont par ailleurs associés en réseaux dont la topologie des connexions est variable : réseaux proactifs , récurrents , etc. enfin , l&apos; efficacité de la transmission des signaux d&apos; un neurone à l&apos; autre peut varier : on parle de « poids synaptique » , et ces poids peuvent être modulés par des règles d&apos; apprentissage ( ce qui mime la plasticité synaptique des réseaux biologiques ) . une fonction des réseaux de neurones formels , à l ’ instar du modèle vivant , est d&apos; opérer rapidement des classifications et d&apos; apprendre à les améliorer . à l ’ opposé des méthodes traditionnelles de résolution informatique , on ne doit pas construire un programme pas à pas en fonction de la compréhension de celui-ci . les paramètres importants de ce modèle sont les coefficients synaptiques et le seuil de chaque neurone , et la façon de les ajuster . ce sont eux qui déterminent l&apos; évolution du réseau en fonction de ses informations d&apos; entrée . il faut choisir un mécanisme permettant de les calculer et de les faire converger si possible vers une valeur assurant une classification aussi proche que possible de l&apos; optimale . c ’ est ce qu&apos; on nomme la phase d ’ apprentissage du réseau . dans un modèle de réseaux de neurones formels , apprendre revient donc à déterminer les coefficients synaptiques les plus adaptés à classifier les exemples présentés . les travaux de mcculloch et pitts n ’ ont pas donné d ’ indication sur une méthode pour adapter les coefficients synaptiques . cette question au cœur des réflexions sur l ’ apprentissage a connu un début de réponse grâce aux travaux du physiologiste canadien donald hebb sur l ’ apprentissage en 1949 décrits dans son ouvrage the organization of behaviour . hebb a proposé une règle simple qui permet de modifier la valeur des coefficients synaptiques en fonction de l ’ activité des unités qu ’ ils relient . cette règle aujourd ’ hui connue sous le nom de « règle de hebb » est presque partout présente dans les modèles actuels , même les plus sophistiqués . à partir de cet article , l ’ idée se sema au fil du temps dans les esprits , et elle germa dans l ’ esprit de frank rosenblatt en 1957 avec le modèle du perceptron . c ’ est le premier système artificiel capable d ’ apprendre par expérience , y compris lorsque son instructeur commet quelques erreurs ( ce en quoi il diffère nettement d ’ un système d ’ apprentissage logique formel ) . en 1969 , un coup grave fut porté à la communauté scientifique gravitant autour des réseaux de neurones : marvin lee minsky et seymour papert publièrent un ouvrage mettant en exergue quelques limitations théoriques du perceptron , et plus généralement des classifieurs linéaires , notamment l ’ impossibilité de traiter des problèmes non linéaires ou de connexité . ils étendirent implicitement ces limitations à tous modèles de réseaux de neurones artificiels . paraissant alors dans une impasse , la recherche sur les réseaux de neurones perdit une grande partie de ses financements publics , et le secteur industriel s ’ en détourna aussi . les fonds destinés à l ’ intelligence artificielle furent redirigés plutôt vers la logique formelle et la recherche piétina pendant dix ansbishop ( 2006 ) , template : p. 193 . cependant , les solides qualités de certains réseaux de neurones en matière adaptative ( e.g. adaline ) , leur permettant de modéliser de façon évolutive des phénomènes eux-mêmes évolutifs , les amèneront à être intégrés sous des formes plus ou moins explicites dans le corpus des systèmes adaptatifs ; utilisés dans le domaine des télécommunications ou celui du contrôle de processus industriels . en 1982 , john joseph hopfield , physicien reconnu , donna un nouveau souffle au neuronal en publiant un article introduisant un nouveau modèle de réseau de neurones ( complètement récurrent ) . cet article eut du succès pour plusieurs raisons , dont la principale était de teinter la théorie des réseaux de neurones de la rigueur propre aux physiciens . le neuronal redevint un sujet d ’ étude acceptable , bien que le modèle de hopfield souffrît des principales limitations des modèles des années 1960 , notamment l ’ impossibilité de traiter les problèmes non linéaires . à la même date , les approches algorithmiques de l ’ intelligence artificielle furent l ’ objet de désillusion , leurs applications ne répondant pas aux attentes . cette désillusion motiva une réorientation des recherches en intelligence artificielle vers les réseaux de neurones ( bien que ces réseaux concernent la perception artificielle plus que l ’ intelligence artificielle à proprement parler ) . la recherche fut relancée et l ’ industrie reprit quelque intérêt au neuronal ( en particulier pour des applications comme le guidage de missiles de croisière ) . en 1984 ( ? ) , c ’ est le système de rétropropagation du gradient de l ’ erreur qui est le sujet le plus débattu dans le domaine . une révolution survient alors dans le domaine des réseaux de neurones artificiels : une nouvelle génération de réseaux de neurones , capables de traiter avec succès des phénomènes non linéaires : le perceptron multicouche ne possède pas les défauts mis en évidence par marvin minsky . proposé pour la première fois par paul werbos , le perceptron multi-couche apparait en 1986 introduit par david rumelhart , et , simultanément , sous une appellation voisine , chez yann lecun . ces systèmes reposent sur la rétropropagation du gradient de l ’ erreur dans des systèmes à plusieurs couches , chacune de type adaline de bernard widrow , proche du perceptron de rumelhart . les réseaux de neurones ont par la suite connu un essor considérable , et ont fait partie des premiers systèmes à bénéficier de l ’ éclairage de la théorie de la « régularisation statistique » introduite par vladimir vapnik en union soviétique et popularisée en occident depuis la chute du mur . cette théorie , l ’ une des plus importantes du domaine des statistiques , permet d ’ anticiper , d ’ étudier et de réguler les phénomènes liés au surapprentissage . on peut ainsi réguler un système d ’ apprentissage pour qu ’ il arbitre au mieux entre une modélisation pauvre ( exemple : la moyenne ) et une modélisation trop riche qui serait optimisée de façon illusoire sur un nombre d ’ exemples trop petit , et serait inopérant sur des exemples non encore appris , même proches des exemples appris . le surapprentissage est une difficulté à laquelle doivent faire face tous les systèmes d ’ apprentissage par l ’ exemple , que ceux-ci utilisent des méthodes d ’ optimisation directe ( e.g. régression linéaire ) , itératives ( e.g. , l&apos; algorithme du gradient ) , ou itératives semi-directes ( gradient conjugué , espérance-maximisation ... ) et que ceux-ci soient appliqués aux modèles statistiques classiques , aux modèles de markov cachés ou aux réseaux de neurones formelstemplate : article . les réseaux de neurones , en tant que systèmes capables d&apos; apprendre , mettent en œuvre le principe de l&apos; induction , c ’ est-à-dire l&apos; apprentissage par l&apos; expérience . par confrontation avec des situations ponctuelles , ils infèrent un système de décision intégré dont le caractère générique est fonction du nombre de cas d&apos; apprentissages rencontrés et de leur complexité par rapport à la complexité du problème à résoudre . par opposition , les systèmes symboliques capables d&apos; apprentissage , s&apos; ils implémentent également l&apos; induction , le font sur base de la logique algorithmique , par complexification d&apos; un ensemble de règles déductives ( prolog par exemple ) . grâce à leur capacité de classification et de généralisation , les réseaux de neurones sont généralement utilisés dans des problèmes de nature statistique , tels que la classification automatique de codes postaux ou la prise de décision concernant un achat boursier en fonction de l&apos; évolution des cours . autre exemple , une banque peut créer un jeu de données sur les clients qui ont effectué un emprunt constitué : de leur revenu , de leur âge , du nombre d ’ enfants à charge … et s ’ il s ’ agit d ’ un bon client . si ce jeu de données est suffisamment grand , il peut être utilisé pour l ’ entraînement d ’ un réseau de neurones . la banque pourra alors présenter les caractéristiques d ’ un potentiel nouveau client , et le réseau répondra s ’ il sera bon client ou non , en généralisant à partir des cas qu ’ il connaît . si le réseau de neurones fonctionne avec des nombres réels , la réponse traduit une probabilité de certitude . par exemple : 1 pour « sûr qu ’ il sera un bon client » , -1 pour « sûr qu ’ il sera mauvais client » , 0 pour « aucune idée » , 0,9 pour « presque sûr qu ’ il sera bon client » . le réseau de neurones ne fournit pas toujours de règle exploitable par un humain . le réseau reste souvent une boîte noire qui fournit une réponse quand on lui présente une donnée , mais le réseau ne fournit pas de justification facile à interpréter. pour la classification d ’ espèces animales par espèce étant donnée une analyse adn. reconnaissance de motif ; par exemple pour la reconnaissance optique de caractères ( ocr ) , et notamment par les banques pour vérifier le montant des chèques , par la poste pour trier le courrier en fonction du code postal , etc. ; ou bien encore pour le déplacement automatisé de robots mobiles autonomes. approximation d ’ une fonction inconnue. modélisation accélérée d ’ une fonction connue mais très complexe à calculer avec exactitude ; par exemple certaines fonctions d ’ inversions utilisées pour décoder les signaux de télédétection émis par les satellites et les transformer en données sur la surface de la mer. tentatives de prédiction sur la périodicité des cours boursiers . ce type de prédiction est très contesté pour deux raisons , l ’ une étant qu&apos; il n&apos; est pas évident que le cours d ’ une action ait de façon tout à fait convaincante un caractère périodique ( le marché anticipe en effet largement les hausses comme les baisses prévisibles , ce qui applique à toute périodicité éventuelle une variation de période tendant à la rendre difficilement fiable ) , et l ’ autre que l ’ avenir prévisible d ’ une entreprise détermine au moins aussi fortement le cours de son action , si ce n&apos; est plus encore que peut le faire son passé ; les cas de pan am , manufrance ou ibm permettent de s ’ en convaincre. modélisation de l&apos; apprentissage et amélioration des techniques de l&apos; enseignement. en météorologie , pour la classification de conditions atmosphériques et la prévision statistique du temps. en auscultation des ouvrages hydrauliques , pour la compréhension physique des phénomènes de déplacements , sous-pressions et débits de fuite . les réseaux de neurones artificiels ont besoin de cas réels servant d ’ exemples pour leur apprentissage ( on appelle cela la base d&apos; apprentissage ) . ces cas doivent être d ’ autant plus nombreux que le problème est complexe et que sa topologie est peu structurée . par exemple , on peut optimiser un système neuronal de lecture de caractères en utilisant le découpage manuel d ’ un grand nombre de mots écrits à la main par de nombreuses personnes . chaque caractère peut alors être présenté sous la forme d ’ une image brute , disposant d ’ une topologie spatiale à deux dimensions , ou d ’ une suite de segments presque tous liés . la topologie retenue , la complexité du phénomène modélisé , et le nombre d ’ exemples doivent être en rapport . sur un plan pratique , cela n ’ est pas toujours facile car les exemples peuvent être soit en quantité absolument limitée ou trop onéreux à collecter en nombre suffisant . il y a des problèmes qui se traitent bien avec les réseaux de neurones , en particulier ceux de classification en domaines convexes ( c ’ est-à-dire tels que si des points a et b font partie du domaine , alors tout le segment ab en fait partie aussi ) . des problèmes comme &quot; le nombre d ’ entrées à 1 ( ou à zéro ) est-il pair ou impair ? &quot; se résolvent en revanche très mal : pour affirmer de telles choses sur 2 puissance n points , si on se contente d ’ une approche naïve mais homogène , il faut précisément n-1 couches de neurones intermédiaires , ce qui nuit à la généralité du procédé . un exemple caricatural , mais significatif est le suivant : disposant en entrée du seul poids d&apos; une personne , le réseau doit déterminer si cette personne est une femme ou bien un homme . les femmes étant statistiquement un peu plus légères que les hommes , le réseau fera toujours un peu mieux qu&apos; un simple tirage au hasard : cet exemple dépouillé indique la simplicité et les limitations de ces modèles mais il montre également comment l&apos; étendre : l&apos; information &quot; port d&apos; une jupe &quot; , si on l&apos; ajoute , aurait clairement un coefficient synaptique plus grand que la simple information de poids . un réseau de neurones est en général composé d&apos; une succession de couches dont chacune prend ses entrées sur les sorties de la précédente . chaque couche ( i ) est composée de ni neurones , prenant leurs entrées sur les ni-1 neurones de la couche précédente . à chaque synapse est associé un poids synaptique , de sorte que les ni-1 sont multipliés par ce poids , puis additionnés par les neurones de niveau i , ce qui est équivalent à multiplier le vecteur d&apos; entrée par une matrice de transformation . mettre l&apos; une derrière l&apos; autre les différentes couches d&apos; un réseau de neurones reviendrait à mettre en cascade plusieurs matrices de transformation et pourrait se ramener à une seule matrice , produit des autres , s&apos; il n&apos; y avait à chaque couche , la fonction de sortie qui introduit une non linéarité à chaque étape . ceci montre l&apos; importance du choix judicieux d&apos; une bonne fonction de sortie : un réseau de neurones dont les sorties seraient linéaires n&apos; aurait aucun intérêt . au-delà de cette structure simple , le réseau de neurones peut également contenir des boucles qui en changent radicalement les possibilités mais aussi la complexité . de la même façon que des boucles peuvent transformer une logique combinatoire en logique séquentielle , les boucles dans un réseau de neurones transforment un simple dispositif de reconnaissance d&apos; entrées en une machine complexe capable de toutes sortes de comportements . considérons un neurone quelconque . il reçoit des neurones en amont un certain nombre de valeurs via ses connexions synaptiques , et il produit une certaine valeur en utilisant une fonction de combinaison . les réseaux de type mlp ( multi-layer perceptron ) calculent une combinaison linéaire des entrées , c ’ est-à-dire que la fonction de combinaison renvoie le produit scalaire entre le vecteur des entrées et le vecteur des poids synaptiques . les réseaux de type rbf ( radial basis function ) calculent la distance entre les entrées , c ’ est-à-dire que la fonction de combinaison renvoie la norme euclidienne du vecteur issu de la différence vectorielle entre les vecteurs d ’ entrées . la fonction d ’ activation ( ou fonction de seuillage , ou encore fonction de transfert ) sert à introduire une non-linéarité dans le fonctionnement du neurone. au-dessus du seuil , le neurone est actif ( souvent dans ce cas , sa sortie vaut 1 ) . la fonction sigmoïde . la fonction tangente hyperbolique . la fonction de heaviside . ce calcul effectué , le neurone propage son nouvel état interne sur son axone . dans un modèle simple , la fonction neuronale est simplement une fonction de seuillage : elle vaut 1 si la somme pondérée dépasse un certain seuil ; 0 sinon . dans un modèle plus riche , le neurone fonctionne avec des nombres réels ( souvent compris dans l ’ intervalle &#91; 0,1 &#93; ou &#91; -1,1 &#93; ) . on dit que le réseau de neurones passe d&apos; un état à un autre lorsque tous ses neurones recalculent en parallèle leur état interne , en fonction de leurs entrées . la notion d ’ apprentissage , bien que connue déjà depuis sumer , n ’ est pas modélisable dans le cadre de la logique déductive : celle-ci en effet procède à partir de connaissances déjà établies dont on tire des connaissances dérivées . or il s ’ agit ici de la démarche inverse : par observations limitées , tirer des généralisations plausibles : c&apos; est un procédé par induction. généralisation : le fait d ’ être capable , grâce aux exemples appris , de traiter des exemples distincts , encore non rencontrés , mais similaires . dans le cas des systèmes d ’ apprentissage statistique , utilisés pour optimiser les modèles statistiques classiques , réseaux de neurones et automates markoviens , c ’ est la généralisation qui est l ’ objet de toute l ’ attention . cette notion de généralisation est traitée de façon plus ou moins complète par plusieurs approches théoriques . la généralisation est traitée de façon globale et générique par la théorie de la régularisation statistique introduite par vladimir vapnik . cette théorie , développée à l ’ origine en union soviétique , s ’ est diffusée en occident depuis la chute du mur de berlin . la théorie de la régularisation statistique s ’ est diffusée très largement parmi ceux qui étudient les réseaux de neurones en raison de la forme générique des courbes d ’ erreurs résiduelles d ’ apprentissage et de généralisation issues des procédures d ’ apprentissage itératives telles que les descentes de gradient utilisées pour l ’ optimisation des perceptrons multi-couches . ces formes génériques correspondent aux formes prévues par la théorie de la régularisation statistique ; cela vient du fait que les procédures d ’ apprentissage par descente de gradient , partant d ’ une configuration initiale des poids synaptiques explorent progressivement l ’ espace des poids synaptiques possibles ; on retrouve alors la problématique de l ’ augmentation progressive de la capacité d ’ apprentissage , concept fondamental au cœur de la théorie de la régularisation statistique . la généralisation est aussi au cœur de l ’ approche de l&apos; inférence bayésienne , enseignée depuis plus longtemps . le théorème de cox-jaynes fournit ainsi une base importante à un tel apprentissage , en nous apprenant que toute méthode d ’ apprentissage est soit isomorphe aux probabilités munies de la relation de bayes , soit incohérente . c ’ est là un résultat extrêmement fort , et c ’ est pourquoi les méthodes bayésiennes sont largement utilisées dans le domaine . un perceptron ( un réseau à une unité ) peut représenter les fonctions booléennes suivantes : and , or , nand , nor mais pas le xor . comme toute fonction booléenne est représentable à l&apos; aide de and , or , nand et nor , un réseau de perceptrons est capable de représenter toutes les fonctions booléennes . fonctions booléennes : toutes les fonctions booléennes sont représentables par un réseau à deux couches . au pire des cas , le nombre de neurones de la couche cachée augmente de manière exponentielle en fonction du nombre d&apos; entrées . fonctions continues : toutes les fonctions continues bornées sont représentables , avec une précision arbitraire , par un réseau à deux couches ( cybenko , 1989 ) . ce théorème s&apos; applique au réseau dont les neurones utilisent la sigmoïde dans la couche cachée et des neurones linéaires ( sans seuil ) dans la couche de sortie . le nombre de neurones dans la couche cachée dépend de la fonction à approximer . fonctions arbitraires : n&apos; importe quelle fonction peut être approximée avec une précision arbitraire grâce à un réseau à trois couches ( théorème de cybenko , 1988 ) . la large majorité des réseaux de neurones possède un algorithme « d ’ entraînement » qui consiste à modifier les poids synaptiques en fonction d ’ un jeu de données présentées en entrée du réseau . le but de cet entraînement est de permettre au réseau de neurones « d ’ apprendre » à partir des exemples . si l ’ entraînement est correctement réalisé , le réseau est capable de fournir des réponses en sortie très proches des valeurs d ’ origines du jeu de données d ’ entraînement . mais tout l ’ intérêt des réseaux de neurones réside dans leur capacité à généraliser à partir du jeu de test . il est donc possible d&apos; utiliser un réseau de neurones pour réaliser une mémoire ; on parle alors de mémoire neuronale . la vision topologique d ’ un apprentissage correspond à la détermination de l ’ hypersurface sur \ mathbb { r } ^ n où \ mathbb { r } est l ’ ensemble des réels , et n le nombre d ’ entrées du réseau . un apprentissage est dit supervisé lorsque le réseau est forcé à converger vers un état final précis , en même temps qu&apos; un motif lui est présenté . à l ’ inverse , lors d ’ un apprentissage non-supervisé , le réseau est laissé libre de converger vers n ’ importe quel état final lorsqu&apos; un motif lui est présenté . il arrive souvent que les exemples de la base d&apos; apprentissage comportent des valeurs approximatives ou bruitées . si on oblige le réseau à répondre de façon quasi parfaite relativement à ces exemples , on peut obtenir un réseau qui est biaisé par des valeurs erronées . par exemple , imaginons qu&apos; on présente au réseau des couples ( xi , f ( xi ) ) situés sur une droite d&apos; équation y = ax + b , mais bruités de sorte que les points ne soient pas exactement sur la droite . s&apos; il y a un bon apprentissage , le réseau répond ax + b pour toute valeur de x présentée . s&apos; il y a surapprentissage , le réseau répond un peu plus que ax + b ou un peu moins , car chaque couple ( xi , f ( xi ) positionné en dehors de la droite va influencer la décision . pour éviter le surapprentissage , il existe une méthode simple : il suffit de partager la base d&apos; exemples en 2 sous-ensembles . le premier sert à l&apos; apprentissage et le second sert à l&apos; évaluation de l&apos; apprentissage . tant que l&apos; erreur obtenue sur le deuxième ensemble diminue , on peut continuer l&apos; apprentissage , sinon on arrête . la rétropropagation consiste à rétropropager l&apos; erreur commise par un neurone à ses synapses et aux neurones qui y sont reliés . pour les réseaux de neurones , on utilise habituellement la rétropropagation du gradient de l&apos; erreur , qui consiste à corriger les erreurs selon l&apos; importance des éléments qui ont justement participé à la réalisation de ces erreurs : les poids synaptiques qui contribuent à engendrer une erreur importante se verront modifiés de manière plus significative que les poids qui ont engendré une erreur marginale . optimal brain damage ( obd ) de yann lecun et al. l ’ ensemble des poids des liaisons synaptiques détermine le fonctionnement du réseau de neurones . les motifs sont présentés à un sous-ensemble du réseau de neurones : la couche d ’ entrée . lorsqu ’ un motif est appliqué à un réseau , celui-ci cherche à atteindre un état stable . lorsqu ’ il est atteint , les valeurs d ’ activation des neurones de sortie constituent le résultat . les neurones qui ne font ni partie de la couche d ’ entrée ni de la couche de sortie sont dits neurones cachés. d ’ autres paramètres , spécifiques à certains types de réseaux de neurones , tels que la méthode de relaxation pour les réseaux de neurones ( réseaux de hopfield par exemple ) qui ne sont pas à propagation simple ( perceptron multicouche par exemple ) . la méthode de dégradation des pondérations ( weight decay ) , permettant d ’ éviter les effets de bord et de neutraliser le surapprentissage . article détaillé : perceptron . le réseau adaline est proche du modèle perceptron , seule sa fonction d&apos; activation est différente puisqu&apos; il utilise une fonction linéaire . afin de réduire les parasites reçus en entrée , les réseaux adaline utilisent la méthode des moindres carrés . le réseau réalise une somme pondérée de ses valeurs d&apos; entrées et y rajoute une valeur de seuil prédéfinie . la fonction de transfert linéaire est ensuite utilisée pour l&apos; activation du neurone . lors de l&apos; apprentissage , les coefficients synaptiques des différentes entrées sont modifiées en utilisant la loi de widrow-hoff ( en ) catégorie : article contenant un appel à traduction en anglais . ces réseaux sont souvent employés en traitement de signauxmohan mokhtari , michel marie applications de matlab 5 et simulink 2 : contrôle de procédés , logique floue , réseaux de neurones , traitement du signal , springer-verlag , paris , 1998 template : isbn , notamment pour la réduction de bruit . article détaillé : perceptron multicouche . dans ce type d&apos; apprentissage non supervisé , les neurones sont en compétition pour être actifs . ils sont à sortie binaire et on dit qu&apos; ils sont actifs lorsque leur sortie vaut 1 . alors que dans les autres règles plusieurs sorties de neurones peuvent être actives simultanément , dans le cas de l&apos; apprentissage compétitif , un seul neurone est actif à un instant donné . chaque neurone de sortie est spécialisé pour « détecter » une suite de formes similaires et devient alors un détecteur de caractéristiques . la fonction d ’ entrée est dans ce cas , h = b-dist ( w , x ) où b , w et x sont respectivement les vecteurs seuil , poids synaptiques et entrées . le neurone gagnant est celui pour lequel h est maximum donc si les seuils sont identiques , celui dont les poids sont les plus proches des entrées . le neurone dont la sortie est maximale sera le vainqueur et sa sortie sera mise à 1 alors que les perdants auront leur sortie mise à 0 . dwij = 0 si le neurone i perd . cette règle a pour effet de rapprocher le vecteur poids synaptique wij de la forme d&apos; entrée xj . exemple : considérons deux nuages de points du plan que l ’ on désire séparer en deux classes. x1 et x2 sont les deux entrées , w11 et w12 sont les poids du neurone 1 que l ’ on peut considérer comme les coordonnées d ’ un point ‘ poids du neurone 1 ’ et w21 et w22 sont les poids du neurone 2 . si les seuils sont nuls , hi sera la distance entre les points à classer et les points poids . la règle précédente tend à diminuer cette distance avec le point échantillon lorsque le neurone gagne . elle doit donc permettre à chaque point poids de se positionner au milieu d ’ un nuage . si on fixe initialement les poids de manière aléatoire , il se peut que l ’ un des neurones se positionne près des deux nuages et que l ’ autre se positionne loin de sorte qu ’ il ne gagne jamais . ses poids ne pourront jamais évoluer alors que ceux de l ’ autre neurone vont le positionner au milieu des deux nuages . le problème de ces neurones que l ’ on qualifie de morts peut être résolu en jouant sur les seuils . en effet , il suffit d ’ augmenter le seuil de ces neurones pour qu ’ ils commencent à gagner . applications : ce type de réseau et la méthode d&apos; apprentissage correspondant peuvent être utilisés en analyse de données afin de mettre en évidence des similitudes entre certaines données . s ’ agissant d ’ un modèle , les réseaux de neurones sont généralement utilisés dans le cadre de simulation logicielle . imsl et matlab disposent ainsi de bibliothèques dédiées aux réseaux de neurones . cependant , il existe quelques implémentations matérielles des modèles les plus simples , comme la puce zisc . ( en ) warren sturgis mcculloch and walter pitts . a logical calculus of the ideas immanent in nervous activity . bulletin of mathematical biophysics , 5 : 115-133 , 1943 . ( en ) frank rosenblatt . the perceptron : probabilistic model for information storage and organization in the brain . psychological review , 65 : 386-408 , 1958 . ( en ) marvin lee minsky and seymour papert . perceptrons : an introduction to computational geometry . mit press , expanded edition , 1988 . ( en ) john joseph hopfield . neural networks and physical systems with emergent collective computational abilities . proceedings of the national academy of sciences , 79 : 2554-2558 , 1982 . yann lecun . une procédure d ’ apprentissage pour réseau à seuil asymétrique . cognitiva 85 , paris , 4-7 juin 1985 . ( en ) d. e. rumelhart and j. l. mc clelland . parallel distributed processing : exploration in the microstructure of cognition . mit press , cambridge , 1986 . ( en ) j. a. anderson and e. rosenfeld . neuro computing foundations of research . mit press , cambridge , 1988 . wulfram gerstner , « réseau de neurones artificiels - une introduction à l&apos; apprentissage automatique » , sur moodlearchive.epfl.ch , ‎ &lt; time &gt; 2006 &lt; / time &gt; ( consulté le 6 juillet 2016 ) . léon personnaz et isabelle rivals , réseaux de neurones formels pour la modélisation , la commande et la classification , cnrs éditions , 2003 . neural networks : biological computers or electronic brains - les entretiens de lyon – ( sous la direction de école normale supérieure de lyon ) - editions springer-verlag 1990 . jean-paul haton , modèles connexionnistes pour l ’ intelligence artificielle , 1989 . gérard dreyfus , jean-marc martinez , mannuel samuelides , mirta gordon , fouad badran , sylvie thiria , &quot; apprentissage statistique : réseaux de neurones , cartes topologiques , machines à vecteurs supports &quot; eyrolles &#91; 2008 &#93; . simon haykin , « neural networks : a comprehensive foundation ( 2nd edition ) » , &#91; 1998 &#93; prentice hall . christopher m. bishop , « neural networks for pattern recognition » , oxford university press &#91; 1995 &#93; . marc parizeau , réseaux de neurones ( le perceptron multicouche et son algorithme de retropropagation des erreurs ) , université laval , laval , 2004 , 272 p.
