le langage de modélisation par objets typés ( mot ) conçu par gilbert paquette ( 2002 , 2010 ) en collaboration avec les chercheurs du centre de recherche licef , est un langage de représentation graphique et semi-formel de la connaissance . en émergence de l ’ innovation , mot est employé en transfert de connaissances métier ( basque et al. 2010 ) entre un expert et un novice , il s ’ utilise dans la séance de remue-méninge ou encore comme langage neutre qui stimule l ’ échange et la communication entre intervenants d ’ horizons disciplinaires hétérogènes ( par ex. : des gestionnaires , décideurs et gens de métier mis en relation pour résoudre une problématique dans l ’ organisation ) . mot s ’ adresse à des pédagogues , des coaches , des gestionnaires de projets , des experts de métier , des ingénieurs , des professionnels de la communication , des penseurs ou à toutes personnes désireuses de partager des connaissances . comme la plupart des langages , la structure de mot se compose d ’ un alphabet , d ’ une grammaire et d ’ une sémantique ( voir la figure 1 ) . l ’ alphabet est constitué de symboles , d ’ icônes ou de la représentation de base du langage ( ce que l&apos; on appel parfois les primitives du langage ) . par exemple , en langue française , l ’ alphabet se compose de caractères regroupés en voyelles et en consonnes . la grammaire , quant à elle , sert à définir les règles d ’ utilisation des symboles . l ’ application des règles est indépendante du sens que représentent les symboles . la sémantique est la définition du sens qui est donné aux symboles . par exemple , dans la figure 1 , deux symboles sont utilisés soit le rectangle représentant un concept et la flèche traversée d ’ un « c » qui indique un lien de composition . la règle de grammaire utilisée ici s ’ énonce comme suit : « un lien de composition qui a comme origine un concept relie à sa destination un autre concept » . la sémantique associée à cette règle est : un concept a est composé d ’ un concept b. par exemple , dans la figure 1 on peut lire : « le concept langage se compose des concepts : alphabet , grammaire et sémantique » . l ’ alphabet du langage comporte deux catégories de symbole graphique : la connaissance et la relation ( voir la figure 2 ) . la relation est la catégorie de symboles qui permet de lier par un vecteur deux connaissances d&apos; un schéma . la connaissance est la catégorie de symboles qui permet de représenter la connaissance de quelque chose . en mot , la connaissance se divise en deux sous-catégories , la connaissance abstraite et la connaissance factuelle . les connaissances peuvent être combinées au sein d ’ un même schéma de manière à produire des modèles mixtes de connaissances . la connaissance abstraite représente quelque chose du monde des idées . par exemple , dans la phrase « le chien est le meilleur ami de l ’ homme » , le mot « chien » fait référence à un concept , à une idée que l ’ on se représente de ce qu ’ est un « chien » . la connaissance factuelle fait référence à une entité tangible , qu ’ on peut aussi nommer « objet concret » . par exemple , s ’ il est dit « fido est le meilleur ami de l ’ homme » , alors le mot « fido » fait référence à quelque chose qui existe , qu ’ il est possible de toucher . on dira alors que le mot « fido » est une connaissance factuelle . la connaissance déclarative représente « le quoi » des choses ou encore les entités d&apos; un domaine du discours . par exemple : table , chaise , coutellerie , chandelier , etc. , sont des entités déclaratives du domaine du discours de ce qui est contenu dans une salle à dîner . la connaissance procédurale représente « le comment » des choses , elle désigne des opérations , des actions pouvant être accomplies . par exemple : déplacer , saisir , couper , etc. la connaissance prescriptive représente « le pourquoi , le qui , le quand » des choses . elle est une connaissance qui permet de nommer une relation qui existe entre des objets , elle sert aussi à représenter une condition pouvant s ’ appliquer à l ’ exécution d ’ une action . elle est aussi utilisée pour représenter des personnes , des règles , des objectifs , des contraintes régissant une action ou une entité du domaine du discours . le symbole concret est l&apos; équivalent d&apos; une lettre dans un alphabet . par exemple , la lettre a est le symbole concret de la catégorie de symboles voyelle . le langage mot contient une série de symboles concrets associés aux relations et aux connaissances du langage . chaque symbole concret possède une sémantique ( un sens , une signification ) qui lui est associée . le symbole concret de type connaissance est une connaissance typée . dans sa définition originale mot possède six connaissances typées { concept , procédure , principe , exemple , trace et énoncé } ( voir le tableau 1 et le tableau 2 ) , chaque connaissance est associée à un niveau d&apos; abstraction ( abstrait ou factuel ) ainsi qu&apos; à un type ( déclaratif , procédural ou prescriptif. le concept : est le symbole concret qui représente une connaissance abstraite déclarative . elle représente « le quoi » des choses . il sert à décrire l ’ essence d ’ un objet concret . il peut être associé à l ’ idée de classe ou de catégorie . en ce sens , il est l&apos; abstraction d ’ un objet concret. l&apos; exemple : est le symbole concret qui représente une connaissance factuelle déclarative . il représente un des objets concrets en énonçant un certain nombre de faits qui le décrivent . la procédure : est le symbole concret qui représente une connaissance abstraite procédurale . elle décrit « le comment » des choses . elle désigne des catégories d&apos; opérations ou d&apos; actions pouvant être accomplies . la trace : est le symbole concret qui représente une connaissance factuelle procédurale . elle représente l ’ ensemble des faits concrets obtenus lors de l ’ exécution d ’ une procédure . le principe : est le symbole concret qui représente une connaissance adstraite prescriptive . elle désigne « le pourquoi » , « le quand » ou le « qui » associé à une chose . il est une connaissance stratégique qui permet de nommer une catégorie de relations qui existe entre des objets , que ce soit des concepts , des procédures ou d ’ autres principes . il sert notamment à représenter une condition pouvant s ’ appliquer à l ’ exécution d ’ une action . il est aussi utilisé pour représenter des rôles dans une organisation , des catégories de règles et des catégories de contraintes . l&apos; énoncé est le symbole concret qui représente une connaissance factuelle prescriptive . il représente l ’ instanciation d&apos; un principe à propos d ’ objets concrets . le symbole concret de type relation est un lien typé . dans sa définition originale mot possède six liens typés { i , p , s , ip , r } ( voir la figure 4 ) et un lien non typé . chaque type de lien possède une sémantique propre . lien s : le lien de spécialisation associe deux connaissances abstraites de même type dont la première est une spécialisation de la seconde . ce lien est notamment utile dans la description des taxonomies . le lien de spécialisation est une relation transitive . lien i : le lien d&apos; instanciation associe à une connaissance abstraite un connaissance factuelle qui caractérise une instance de cette connaissance . le lien d&apos; instanciation n&apos; est pas une relation transitive . lien i / p : le lien intrant / produit sert à associer une connaissance procédurale à une connaissance conceptuelle afin de représenter l&apos; intrant ou le produit d&apos; une procédure . ce lien est notamment utile dans la description des algorithmes , des processus et des méthodes . le lien intrant / produit n&apos; est pas une relation transitive . lien p : le lien de précédence associe une connaissance à une autre qui la suit dans une séquence temporelle de procédures ou de règle de décision ( principes ) . le lien de précédence est une relation transitive . lien r : le lien de régulation associe une connaissance stratégique ( un principe ou un énoncé ) à une autre connaissance afin de préciser une contrainte , une restriction ou une règle qui régit la connaissance . le lien de régulation est une relation non-transitive . lien c , c * : les liens de composition et de composition multiple permettent de représenter l ’ association entre une connaissance et des connaissances qui la composent . le lien de composition est une relation transitive . le symbole de connaissances « non typé » et le lien nt ( non typé ) ne font pas partie du langage mot . ils sont offerts chez certains éditeurs comme commodité pour éditer des cartes conceptuelles non typées . certaines règles d ’ association entre des connaissances sources et des connaissances destinations sont appliquées à chacun des types de relation . ces règles définissent les relations considérées valides entre les différents types de connaissances du point de vue de la sémantique mot . règle 1 : une relation ne peut pas exister seule ; elle doit , à son origine et à sa destination , référer à une connaissance ( factuelle et / ou abstraite selon le cas ) . règle 2 : il est possible qu ’ une relation possède la même connaissance d ’ origine et de destination . chacune des cases du tableau s ’ interprète selon la même lecture impliquant un ensemble de cas d ’ utilisation pour chacun des liens . le lien « c » , qui se lit : « lien de composition » , sert à représenter les composants , les constituants d ’ une connaissance . il permet d ’ indiquer qu ’ une connaissance se compose d ’ une ou plusieurs autres connaissances . le lien « s » , qui se lit : « lien de spécialisation » , sert à représenter la spécialisation d ’ une connaissance par rapport à une autre . il permet de désigner des cas particuliers de connaissances conceptuelles . les connaissances liées par un lien de spécialisation sont des connaissances de même type . le lien « r » , qui se lit : « lien de régulation » , est une relation qui met en jeu un principe et l&apos; une ou l&apos; autre des connaissances abstraites . en tant qu&apos; agent , norme ou contrainte , le principe est utilisé en conjonction avec un lien de régulation pour indiquer une situation de régulation d&apos; un objet par un autre . le lien « i » , qui se lit : « lien d ’ instanciation » , met en relation une connaissance abstraite et la connaissance factuelle de même type . il sert à représenter la relation entre un objet concret et l ’ abstraction qui lui est associée . le lien « i / p » , qui se lit : « lien intrant / produit » , met en relation une connaissance de type procédure et de type concept ( voir l&apos; exemple du tableau 8 ) . il sert à désigner les composants nécessaires à la réalisation de la procédure ainsi que les objets produits par la procédure . le lien « p » , qui se lit « lien de précédence » met en relation des procédures ou des principes . il sert à ordonner la séquence d ’ exécution des procédures ou l ’ ordonnancement de l ’ application de principes . nous avons vu que le langage de modélisation par objet typé permet la représentation de connaissances déclaratives ( concept et exemple ) , procédurales ( procédure et trace ) et stratégiques ( principe et énoncé ) . les connaissances sont mises en relation par l ’ utilisation des liens typés : composition , spécialisation , précédence , intrant / produit , d ’ instance et de régulation . nous avons aussi vu que chaque relation est régie par des règles d ’ utilisation , et que ces règles sont associées à une sémantique propre . la figure 5 présente un exemple de modèle pouvant être réalisé avec le langage mot et qui regroupe dans un même schéma l&apos; ensemble du vocabulaire de mot . voici en quelques lignes la pensée qui aurait pu conduire à une tel modélisation . le corps céleste est régi par la loi de la gravitation universelle . il a pour attribut une masse et est lié par la force d&apos; attraction gravitationnelle . cette force est calculée à partir de la masse et de l&apos; accélération gravitationnelle qui est de 9.8 m / s2 . d&apos; autres paramètres physiques peuvent être calculés tel que l&apos; énergie et la quantité de mouvement . les étoiles , les planètes et les satellites naturels sont des corps célestes . les planètes tournent autour des étoiles et les satellites naturels tournent autour des planètes . sature , mars et la terre sont des planètes alors que déimos , phobos sont des satellites de mars . titan , téthys , japet et rhéa sont des satellites naturels de saturne . finalement , la lune est un satellite naturel de la terre . à ce jour , deux producteurs de logiciels distribuent des éditeurs basés sur le langage mot . le centre de recherche licef et la firme cogigraph technologies ( tci ) distribuent les éditeurs mot2.3 , motplus et le plus récent , g-mot et la firme cotechnoe qui distribue le logiciel ontocase &#93; . le langage mot s&apos; est développé à travers trois générations d ’ outils de modélisation . l ’ éditeur de modèle mot a été rendu disponible en version 2.3 dès 1996 . il est toujours largement utilisé . de 1996 à 1999 , l ’ éditeur de modèle motplus a été créé . il intègre la plupart des fonctionnalités de l ’ éditeur mot 2.3 en leur ajoutant notamment deux nouvelles versions . l ’ éditeur mot + ld permet de créer des scénarios de travail ou de formation qui peuvent être exportés selon différents formats , notamment un format exécutable dans les systèmes compatibles à la norme ims-ld . l ’ éditeur mot + owl permet de construire totalement graphiquement et d ’ exporter des ontologies selon le format owl-dl fondé sur les logiques de description . le multi-éditeur g-mot a été créé de 2008 à 2012 . il existe en version autonome ou intégrée au système telos . cet outil polyvalent regroupe les principales fonctionnalités de l ’ éditeur motplus . il est construit sur des bases technologiques plus récentes . nous ne présentons ici que les principales fonctionnalités . le lecteur pourra référer aux guides usagers pour la réalisation d ’ activités de modélisation à l ’ aide de cet outil . l ’ éditeur de base mot 2.3 est doté de fonctionnalités d ’ édition graphiques sophistiquées . il permet de créer avec aisance des graphes conformes à la grammaire du langage mot représentant les divers types de connaissances et de liens , faisant ressortir la nature et la structure du contenu . il n&apos; est toutefois utilisable que sur le système d&apos; exploitation windows . mot 2.3 permet d ’ associer des modèles aux connaissances et de déployer les modèles sur autant de niveaux que nécessaires . mot 2.3 permet de filtrer un modèle pour n ’ afficher que certains types de connaissances ou de liens , de créer automatiquement le voisinage d ’ une connaissance en y regroupant toutes les connaissances à une certaine distance d ’ une connaissance donnée . mot 2.3 permet d ’ associer à une connaissance des documents de tous types appliquant la norme object linking and embedding ( ole ) tels les traitements de textes , les présentateurs de diapositives , les fureteurs web , les tableurs et les bases de données . mot 2.3 permet de documenter un modèle au moyen de commentaires associés aux connaissances ou aux liens et de construire automatiquement un fichier texte regroupant ces commentaires . mot 2.3 permet de modifier la plupart des attributs graphiques d ’ un objet tels que couleur , trame , fonte , alignement , ainsi que la position relative des objets par superposition , alignement , espacement , etc. mot 2.3 est doté de fonctionnalités d ’ import / export , notamment vers le standard xml et les bases de données . créer des strates permettant d&apos; étager les modèles sur une troisième dimension . créer des variantes des modèles et les visualiser de façon intégrée . lier plusieurs applications ( ole ) ou documents à une connaissance ou un commentaire d ’ un modèle . intégrer à un objet un ou plusieurs comodèles d&apos; un autre domaine . - modèle standard : incluant les objets mot habituels ( concepts , procédures , principes , faits ) définis par le langage de modélisation par objets typés . - modèle organigramme : réservé aux objets ‘ concepts ’ , ‘ procédures ’ et ‘ options ( de forme losange ) ’ , avec possibilité de distribuer graphiquement les objets en fonction de colonnes d ’ acteurs . - modèle pédagogique de type learning design : le modèle produit peut être exporté dans un « manifeste » de type xml-ld , validé en fonction de la norme ims-ld . - modèle ontologique owl-dl : les éléments owl sont représentés par des objets et des relations graphiques spécifiques . des étiquettes spécifie certains axiomes de l&apos; ontologie . le modèle est validé lors de son exportation dans le format standard owl-dl . le multi-éditeur g-mot peut être utilisé sur tous les types de plateformes . il offre cinq types d ’ éditeurs de modèles . l ’ éditeur de diagrammes informels permet de créer des cartes conceptuelles et d ’ autres types de modèles informels sans typer les connaissances et les relations . ces modèles peuvent être utiles dans les premières phases d ’ analyse mais ils possèdent une grande ambigüité lors de leur interprétation tel qu ’ indiqué précédemment . l ’ éditeur de modèles standard mot permet de construire des modèles comme ceux réalisés avec mot 2.3 et motplus . ces modèles respectent la syntaxe et la sémantique du langage mot . ils sont qualifiés de semi-formels car leur interprétation est faite sans exiger la précision d ’ un langage formel interprétable sans ambigüité par un programme informatique . en gestion des connaissances , on les recommande à la fois comme moyen de transfert des connaissances entre experts et novices lors d ’ activité de coconstruction d ’ un modèle de connaissances , ou encore comme étape préliminaire pour modéliser un processus ou un domaine de connaissances avant leur formalisation sous forme de scénario exécutable ou d ’ ontologie.les éditeurs de modèles de scénario , de graphes rdf / rdfs et de modèles d ’ ontologies sont au contraire formels , c ’ est-à-dire interprétables par un agent logiciel . l ’ éditeur de scénariopermet de créer des modèles de processus multi-acteurs exécutables dans une interface web , permettant ainsi aux acteurs d ’ interagir entre eux , de réaliser les tâches dont ils sont responsables , et ce en utilisant les ressources intrants de ces tâches et en produisant les ressources prévues dans le scénarios . on peut ainsi modéliser toutes sortes de processus de gestion des connaissances . l ’ éditeur de scénarios g-mot sert à représenter des scénarios d ’ activités multi-acteurs . il a été construit par une analyse , comparative du standard bpmn pour les scénarios de travail ( « workflows » ) , la spécification ims-ld pour les scénarios d ’ apprentissage et le langage général mot . ce travail a conduit au repérage de 21 situations de contrôle utilisés en génie logiciel pour construire des &#91; workflows . ces situations englobe les conditions de la spécification ims-ld , niveaux b et c. l ’ éditeur de graphes rdf / rdfs est fondé sur les langages correspondants élaborés par le w3c , l ’ organisme qui gère le web . il permet de construire graphiquement des ensembles de triples rdf , ainsi que des vocabulaires construits avec le langage rdfs que l&apos; on qualifie aussi &quot; d&apos; ontologies légères &quot; . ce type de graphe est à la base du web de données liées . l ’ éditeur d ’ ontologies owl-dl permet une extension du vocabulaire rdfs en respectent la grammaire du langage d ’ ontologies owl-dl . les graphes peuvent être traitées par des moteurs d ’ inférences qui permettront de déduire des faits et de valider la cohérence des composants du modèle . les ontologies sont au cœur des technologies sémantique nécessaires à la gestion des connaissances d ’ un domaine . les graphes d&apos; ontologies , tout comme les graphes rdf / rdfs , comportent trois types d ’ objets mot . les concepts mot représentent les classes , les principes mot représentent les propriétés et les exemples mot représentent des individus . ontocase , acronyme &quot; d ’ ontology case tool &quot; , est un atelier d ’ ingénierie ontologique qui vise à minimiser l ’ espace entre la connaissance tacite d ’ un expert de contenu et l ’ explicitation de cette connaissance en ontologie compatible owl-1.0 ( lite / dl / full ) . ontocase , de la firme cotechnoe , est une application eclipse construite grâce aux principaux outils issus du web sémantique tels que web ontology language ( owl ) , les api du logiciel protégé et le semantic web rule language . grâce à la technologie plugin du développement éclipse , ontocase peut s&apos; intégrer à des environnements d&apos; ingénierie logicielle et ontologique telle que le ibm rational software architect ou encore topbraid composer de topquadrant . schématisé à la fig. 9 la méthodologie de conception d&apos; une ontologie formelle avec ontocase se répartie en trois phases : concevoir un modèle semi-formel , formaliser en ontologie du domaine et valider l&apos; ontologie du domaine produisant le modèle semi-formel du domaine et l&apos; ontologie du domaine la méthodologie est itérative , c&apos; est-à-dire que le résultat de l&apos; itération précédente sert d&apos; intrant à l&apos; itération en cours de réalisation . le premier de ces acteurs est l&apos; expert de contenu . son rôle principal est d&apos; extérioriser l&apos; expertise qu&apos; il détient par la production d ’ un modèle mot du domaine valide et cohérent face à son domaine d&apos; expertise . il est donc directement impliqué dans la réalisation des méthodes de conception du modèle semi-formel du domaine et dans la méthode de validation de l&apos; ontologie du domaine . le deuxième acteur , le cogniticien qui est un ingénieur de la connaissance , a un rôle de support à la formalisation auprès de l&apos; expert de contenu . l&apos; ingénieur guide l&apos; expert pendant la conception du modèle mot ; il réalise l&apos; exécution de la méthode de formalisation , puis il travaille en collaboration avec l&apos; expert pour la validation de l&apos; ontologie . les troisième , quatrième et cinquième acteurs sont des assistants logiciels qui forment le volet computationnel d&apos; ontocase , soit l ’ éditeur de modèle mot eli , ontoform , le système expert à la formalisation et ontoval , l ’ assistant à la validation . la modélisation , en vue de concevoir un système à base de connaissances ou une ontologie , passe par les étapes d ’ identification , d ’ explicitation , de structuration et de représentation de la connaissance avant qu ’ elle ne soit utilisée pour la conception du système à base de connaissances . à sa plus simple expression , la modélisation est assumée par un ingénieur de la connaissance et un expert de domaine . la méthode formaliser en ontologie du domaine sert à la traduction d&apos; un modèle mot vers une ontologie de domaine dans la notation owl . le processus de formalisation inclus une phase de désambiguïsation du modèle mot , qui dans certains cas est assisté par l&apos; expert de contenu . elle consiste à supprimer les ambigüités contenues dans le modèle mot du domaine afin de produire l ’ ontologie formelle du domaine . pour ce faire , le cogniticien est assisté par ontoform pour identifier et réaliser les patrons de désambiguïsation du modèle mot . en ingénierie ontologique , la validation est une étape essentielle à toute production d&apos; ontologies . dans un modèle , on utilise un vocabulaire , une grammaire et une sémantique pour représenter les connaissances associées à un domaine . pendant la formalisation d&apos; un modèle semi-formel , certaines opérations peuvent modifier des éléments de vocabulaire ( le critère syntaxique ) ou altérer le sens de la représentation ( le critère sémantique ) . il importe donc d&apos; implanter un mécanisme de validation qui assure qu&apos; aucune altération de la syntaxe et de la sémantique du modèle ne soit induite par le processus de transformation . la méthode de validation , régie par l&apos; ingénieur , l&apos; expert et l&apos; assistant informatique intelligent à la validation ( ontoval ) , comporte un processus de validation syntaxique et un processus de validation sémantique . le but de la validation syntaxique est de fournir au cogniticien un mécanisme de détection des erreurs informatiques qui peuvent survenir dans la production de l&apos; ontologie cible . l&apos; idée soutenant ce processus est que tous les éléments et relations du modèle d&apos; origine doivent être représentées dans l&apos; ontologie du domaine . de cette idée , nous supposons qu&apos; un modèle reconstruit à partir de l&apos; ontologie du domaine devrait être identique au modèle d&apos; origine en termes d&apos; entités et de relations . ontoval produit un rapport de validation syntaxique qui exprime les éventuelles anomalies syntaxiques entre les modèles . la validation sémantique est un processus qui s&apos; intéresse à la signification du modèle . le modèle représente-t-il bien la réalité qu&apos; il désigne ? l&apos; interprétation du modèle semi-formel , régie par l&apos; expert , permet de produire une interprétation humaine du modèle semi-formel . quant au processus d&apos; interprétation automatique de l&apos; ontologie , il produit , à partir de l&apos; ontologie du domaine , une interprétation automatique . pour ce faire , le sous-processus utilise un moteur d&apos; inférence pour générer de nouvelles conclusions qui serviront d&apos; intrants au sous-processus de comparaison des interprétations . la comparaison des interprétations , qui est sous la responsabilité du l&apos; expert de contenu , sert à la production du rapport d&apos; interprétation . c ’ est sur la base de ce rapport que la décision de poursuivre ou non la démarche par une nouvelle itération de formalisation sera prise , soit pour modifier le rapport semi-formel ou soit encore pour améliorer son correspondant sous forme d ’ ontologie . la figure 10 présente l&apos; interface utilisateur de l&apos; application ontocase . eli , le module d&apos; édition de modèle mot est une application eclipse ( projet ) . au centre de la moitié supérieure de la figure 10 , se trouve le schéma du modèle semi-formel , alors qu&apos; à gauche , la vue en graphe de composites en présente la taxonomie . la moitié inférieure droite présente un tableau de bord ( sous forme d ’ un modèle procédural ) permettant au cogniticien de lancer les processus nécessaires à la formalisation ( importer , désambiguïser et convertir ) et d&apos; éditer au besoin chaque modèle après le déclenchement du processus . sont aussi accessibles : une vue permettant le contrôle de la validation , une console de commandes exécutées , un volet des propriétés des objets ainsi qu ’ un calepin des messages d&apos; erreurs . dans la section inférieure gauche , l&apos; utilisateur a accès à des utilitaires tels qu&apos; un calepin de tâches à faire , une structure subversion ( logiciel ) pour le contrôle de version des ontologies , une vue de manipulation du serveur web ainsi qu&apos; une vue de structure facilitant la navigation dans de grands modèles . ontoform , le module de formalisation dont l&apos; interface est un tableau de bord ( voir la figure 11 ) est un module qui assiste le cogniticien dans la tâche de formalisation du modèle semi-formel en ontologie . les trois étapes d&apos; importation , de désambiguïsation et de transformation qui composent la réalisation de cette tâche y sont représentées . à chacune des étapes , le cogniticien a l&apos; opportunité d&apos; éditer l ’ ontologie résultante . ontoval le module de validation ( voir la figure 12 ) permet à l&apos; ingénieur et à l&apos; expert de contenu d&apos; accéder aux outils nécessaires à la réalisation d&apos; une validation syntaxique et sémantique . ainsi , les acteurs de cette activité ont accès à des outils permettant la production de conclusions automatiques et nécessaires à l&apos; évaluation sémantique de l&apos; ontologie . ils ont aussi accès à des outils de génération d&apos; un modèle semi-formel à partir de l&apos; ontologie du domaine ainsi qu&apos; à des outils de comparaison entre le modèle d&apos; origine et le modèle généré afin d&apos; assumer la validation syntaxique de l&apos; ontologie du domaine . l&apos; appel à ces outils est assuré par le déploiement d ’ un menu contextualisé qui offre aux acteurs l&apos; opportunité de sélectionner l&apos; outil approprié à la réalisation de la tâche en cours . l ’ élimination des déchets se fait de deux façons principales : l ’ incinération et l ’ enfouissement . l ’ incinération , qui est la méthode la plus onéreuse , consiste à brûler les déchets dans un four à des températures de 500 à 1000 degrés celsius . la matière organique est alors transformée en gaz tandis que le reste des déchets devient un résidu ( cendres ) . cette technique permet d ’ éliminer entre 85 et 90 % du volume initial des déchets , mais les résidus doivent obligatoirement être éliminés dans un lieu d ’ enfouissement sanitaire . étape 2 : produire un modèle mot avec eli . la figure suivante présente un résultat possible de représentation . paquette , g. ( 2002 ) . modélisation des connaissances et des compétences : un langage graphique pour concevoir et apprendre . sainte-foy : presses de l&apos; univerité du québec . paquette , g. ( 2010 ) . visual knowledge and competency modeling - from informal learning models to semantic web ontologies . hershey , pa : igi global . héon , m. ( 2010 ) . ontocase : méthodologie et assistant logiciel pour une ingénierie ontologique fondée sur la transformation d ’ un modèle semi-formel . thèse , université du québec à montréal , montréal . basque , j. , &amp; pudelko , b. ( 2010 ) . la comodélisation des connaissances par objets typés : une stratégie pour favoriser le transfert d&apos; expertise dans les organisations . revue télescope 16 ( spécial : le transfert intergénérationnel des connaissances ) , 111-129 . héon , m. , basque , j &amp; paquette , g ( 2010 ) , validation de la sémantique d ’ un modèle semi-formel de connaissances avec ontocase , au 21es journées francophones d ’ ingénierie des connaissances . nîmes , france . héon , m. , paquette , g. &amp; basque , j. ( 2009 ) , conception assistée , d ’ une ontologie à partir d ’ une conceptualisation consensuelle exprimée de manière semi-formelle , conférence d&apos; ingénierie des connaissancese , hammamet , tunisie .
