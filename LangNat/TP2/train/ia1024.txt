l&apos; algorithme d&apos; aho-corasick est un algorithme de recherche de chaîne de caractères ( ou motif ) dans un texte dû à alfred aho et margaret corasick et publié en 1975 . l&apos; algorithme consiste à avancer dans une structure de données abstraite appelée dictionnaire qui contient le ou les mots recherchés en lisant les lettres du texte t une par une . la structure de données est implantée de manière efficace , ce qui garantit que chaque lettre du texte n&apos; est lue qu&apos; une seule fois . généralement le dictionnaire est implanté à l&apos; aide d&apos; un trie ou arbre digital auquel on rajoute des liens suffixes . une fois le dictionnaire implanté , l&apos; algorithme a une complexité linéaire en la taille du texte t et des chaînes recherchées . l&apos; algorithme extrait toutes les occurrences des motifs . il est donc possible que le nombre d&apos; occurrences soit quadratique , comme pour un dictionnaire a , aa , aaa , aaaa et un texte aaaa . le motif a apparaît à quatre reprises , le motif aa à trois reprises , etc. de manière informelle , l&apos; algorithme génère un trie avec des liens entre les nœuds . chaque nœud représentant une chaîne ( par exemple abc ) a un lien vers le nœud qui correspond au plus long suffixe disponible ( dans le cas d&apos; abc , il s&apos; agit de bc s&apos; il existe , autrement c ou encore la racine ) . de plus l&apos; arbre maintient des liens entre un nœud donné et le nœud représentant le suffixe le plus long qui apparaît dans le dictionnaire . les correspondances peuvent ainsi être énumérées en parcourant la liste chaînée . l&apos; algorithme utilise ensuite l&apos; arbre pendant l&apos; exécution , se déplaçant progressivement dans le texte en entrée et en conservant la correspondance la plus longue . l&apos; utilisation de l&apos; arbre garantit une complexité linéaire . pour chaque nœud présent dans le dictionnaire et tout lien dans la liste chaînée des suffixes du dictionnaire , une sortie est générée . quand les mots recherchés sont connus à l&apos; avance ( par exemple pour une base de données des signatures de virus informatiques ou la recherche d&apos; une séquence particulière dans un génome ) , alors la construction de l&apos; automate peut être exécutée au préalable et le résultat stocké pour une utilisation ultérieure . dans ce cas , la complexité est linéaire en fonction de la longueur de l&apos; entrée plus le nombre de correspondances trouvées . l&apos; algorithme d&apos; aho-corasick fut initialement utilisé dans l&apos; utilitaire grep disponible sous unix . alfred v. aho et margaret j. corasick , juin 1975 , efficient string matching : an aid to bibliographic search , communications of the acm , vol. 18 , issue 6 , pages 333 – 340 , doi 10.1145 / 360825.360855 .
